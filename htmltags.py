"""
2012/10/24 23:06:12
This file was auto-generated by genhtmlclasses.py
"""
from htmltagbase import *


class A(TagBase):
    '''
    [Definition and Usage]
        The <a> tag defines a hyperlink, which is used to link from one page to another.
        The most important attribute of the <a> element is the href attribute, which indicates the link's destination.
        By default, links will appear as follows in all browsers:
        An unvisited link is underlined and blue
        A visited link is underlined and purple
        An active link is underlined and red
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        In HTML 4.01, the <a> tag could be either a hyperlink or an anchor. In HTML5, the <a> tag is always a hyperlink, but if it has no href attribute, it is only a placeholder for a hyperlink. HTML5 has some new attributes, and some HTML 4.01 attributes are no longer supported.
    [Tips and Notes]
        Tip: The attributes: hreflang, media, rel, target, and type attributes cannot be present if the href attribute is not present.
        Tip: A linked page is normally displayed in the current browser window, unless you specify another target.
        Tip: Use CSS to style links.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            CHARSET - [char_encoding] Not supported in HTML5. Specifies the character-set of a linked document
            COORDS - [coordinates] Not supported in HTML5. Specifies the coordinates of a link
            HREF - [URL] Specifies the URL of the page the link goes to
            HREFLANG - [language_code] Specifies the language of the linked document
            MEDIA - [media_query] New in HTML5. Specifies what media/device the linked document is optimized for
            NAME - [section_name] Not supported in HTML5. Specifies the name of an anchor
            REL - [alternate,author,bookmark,help,license,next,nofollow,noreferrer,prefetch,prev,search,tag] Specifies the relationship between the current document and the linked document
            REV - [text] Not supported in HTML5. Specifies the relationship between the linked document and the current document
            SHAPE - [default,rect,circle,poly] Not supported in HTML5. Specifies the shape of a link
            TARGET - [_blank,_parent,_self,_top,framename] Specifies where to open the linked document
            TYPE - [MIME_type] New in HTML5. Specifies the MIME type of the linked document

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "A", *contents, emptyTag=False)
        self.attrset = frozenset(["CHARSET","COORDS","HREF","HREFLANG","MEDIA","NAME","REL","REV","SHAPE","TARGET","TYPE","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class ABBR(TagBase):
    '''
    [Definition and Usage]
        The <abbr> tag indicates an abbreviation or an acronym, like "WWW" or "NATO".
        By marking up abbreviations you can give useful information to browsers, spell checkers, translation systems and search-engine indexers.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        NONE.
    [Tips and Notes]
        Tip: The global title attribute can be used in the <abbr> tag to show the full version of the abbreviation/acronym when you mouse over the <abbr> element.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "ABBR", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class ACRONYM(TagBase):
    '''
    [Definition and Usage]
        The <acronym> tag is not supported in HTML5. Use the <abbr> tag instead.
        The <acronym> tag defines an acronym.
        An acronym can be spoken as if it were a word, example NATO, NASA, ASAP, GUI.
        By marking up acronyms you can give useful information to browsers, spell checkers, translation systems and search-engine indexers.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <acronym> tag is not supported in HTML5, but is supported in HTML 4.01.
    [Tips and Notes]
        Tip: The title attribute can be used to show the full version of the acronym when you mouse over it.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Standard Attributes]:
            CLASS - [classname] Specifies a classname for an element
            DIR - [rtl,ltr] Specifies the text direction for the content in an element
            ID - [id] Specifies a unique id for an element
            LANG - [language_code] Specifies a language code for the content in an element
            STYLE - [style_definition] Specifies an inline style for an element
            TITLE - [text] Specifies extra information about an element
            XML__LANG - [language_code] Specifies a language code for the content in an element, in XHTML documents

        [Event Attributes]:
            ONCLICK - [script] Script to be run on a mouse click
            ONDBLCLICK - [script] Script to be run on a mouse double-click
            ONMOUSEDOWN - [script] Script to be run when mouse button is pressed
            ONMOUSEMOVE - [script] Script to be run when mouse pointer moves
            ONMOUSEOUT - [script] Script to be run when mouse pointer moves out of an element
            ONMOUSEOVER - [script] Script to be run when mouse pointer moves over an element
            ONMOUSEUP - [script] Script to be run when mouse button is released
            ONKEYDOWN - [script] Script to be run when a key is pressed
            ONKEYPRESS - [script] Script to be run when a key is pressed and released
            ONKEYUP - [script] Script to be run when a key is released

        """
        TagBase.__init__(self, "ACRONYM", *contents, emptyTag=False)
        self.attrset = frozenset(["CLASS","DIR","ID","LANG","STYLE","TITLE","XML__LANG","ONCLICK","ONDBLCLICK","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class ADDRESS(TagBase):
    '''
    [Definition and Usage]
        The <address> tag defines the contact information for the author/owner of a document or an article.
        If the <address> element is inside the <body> element, it represents contact information for the document.
        If the <address> element is inside an <article> element, it represents contact information for that article.
        The text in the <address> element usually renders in italic . Most browsers will add a line break before and after the address element.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        HTML 4.01 does not support the <article> tag, so in HTML 4.01 the <address> tag always defines the contact information of the document's author/owner.
    [Tips and Notes]
        Tip: The <address> tag should NOT be used to describe a postal address, unless it is a part of the contact information.
        Tip: The <address> element will typically be included along with other information in a <footer> element.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "ADDRESS", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class APPLET(TagBase):
    '''
    [Definition and Usage]
        The <applet> tag is not supported in HTML5. Use the <object> tag instead.
        The <applet> element is deprecated in HTML 4.01.
        The <applet> tag defines an embedded applet.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <applet> tag is not supported in HTML5, and is deprecated in HTML 4.01.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Required Attributes]:
            CODE - [URL] Specifies the file name of a Java applet
            OBJECT - [name] Specifies a reference to a serialized representation of an applet

        [Optional Attributes]:
            ALIGN - [left,right,top,bottom,middle,baseline] Specifies the alignment of an applet according to surrounding elements
            ALT - [text] Specifies an alternate text for an applet
            ARCHIVE - [URL] Specifies the location of an archive file
            CODEBASE - [URL] Specifies a relative base URL for applets specified in the code attribute
            HEIGHT - [pixels] Specifies the height of an applet
            HSPACE - [pixels] Defines the horizontal spacing around an applet
            NAME - [name] Defines the name for an applet (to use in scripts)
            VSPACE - [pixels] Defines the vertical spacing around an applet
            WIDTH - [pixels] Specifies the width of an applet

        [Standard Attributes]:
            CLASS - [classname] Specifies a classname for an element
            ID - [id] Specifies a unique id for an element
            STYLE - [style_definition] Specifies an inline style for an element
            TITLE - [text] Specifies extra information about an element

        """
        TagBase.__init__(self, "APPLET", *contents, emptyTag=False)
        self.attrset = frozenset(["CODE","OBJECT","ALIGN","ALT","ARCHIVE","CODEBASE","HEIGHT","HSPACE","NAME","VSPACE","WIDTH","CLASS","ID","STYLE","TITLE"])
        self.setAttr(**attrs)


class AREA(TagBase):
    '''
    [Definition and Usage]
        The <area> tag defines an area inside an image-map (an image-map is an image with clickable areas).
        The <area> element is always nested inside a <map> tag.
        Note: The usemap attribute in the <img> tag is associated with the <map> element's name attribute, and creates a relationship between the image and the map.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        HTML5 has some new attributes, and some HTML 4.01 attributes are no longer supported.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            ALT - [text] Specifies an alternate text for the area. Required if the href attribute is present
            COORDS - [coordinates] Specifies the coordinates of the area
            HREF - [URL] Specifies the hyperlink target for the area
            HREFLANG - [language_code] New in HTML5. Specifies the language of the target URL
            MEDIA - [media query] New in HTML5. Specifies what media/device the target URL is optimized for
            NOHREF - [nohref] Not supported in HTML5. Specifies that an area has no associated link
            REL - [alternate,author,bookmark,help,license,next,nofollow,noreferrer,prefetch,prev,search,tag] New in HTML5. Specifies the relationship between the current document and the target URL
            SHAPE - [default,rect,circle,poly] Specifies the shape of the area
            TARGET - [_blank,_parent,_self,_top,framename] Specifies where to open the target URL
            TYPE - [MIME_type] New in HTML5. Specifies the MIME type of the target URL

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "AREA", *contents, emptyTag=False)
        self.attrset = frozenset(["ALT","COORDS","HREF","HREFLANG","MEDIA","NOHREF","REL","SHAPE","TARGET","TYPE","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class ARTICLE(TagBase):
    '''
    [Definition and Usage]
        The <article> tag specifies independent, self-contained content.
        An article should make sense on its own and it should be possible to distribute it independently from the rest of the site.
        Potential sources for the <article> element:
        Forum post
        Blog post
        News story
        Comment
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <article> tag is new in HTML5.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "ARTICLE", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class ASIDE(TagBase):
    '''
    [Definition and Usage]
        The <aside> tag defines some content aside from the content it is placed in.
        The aside content should be related to the surrounding content.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <aside> tag is new in HTML5.
    [Tips and Notes]
        Tip: The <aside> content could be placed as a sidebar in an article.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "ASIDE", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class AUDIO(TagBase):
    '''
    [Definition and Usage]
        The <audio> tag defines sound, such as music or other audio streams.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <audio> tag is new in HTML5.
    [Tips and Notes]
        Tip: Any text inside the between <audio> and </audio> will be displayed in browsers that do not support audio.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            AUTOPLAY - [autoplay] New in HTML5. Specifies that the audio will start playing as soon as it is ready
            CONTROLS - [controls] New in HTML5. Specifies that audio controls should be displayed (such as a play/pause button etc).
            LOOP - [loop] New in HTML5. Specifies that the audio will start over again, every time it is finished
            PRELOAD - [auto,metadata,none] New in HTML5. Specifies if and how the author thinks the audio should be loaded when the page loads
            SRC - [URL] New in HTML5. Specifies the URL of the audio file

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "AUDIO", *contents, emptyTag=False)
        self.attrset = frozenset(["AUTOPLAY","CONTROLS","LOOP","PRELOAD","SRC","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class B(TagBase):
    '''
    [Definition and Usage]
        The <b> tag specifies bold text.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        NONE.
    [Tips and Notes]
        Note: According to the HTML 5 specification, the <b> tag should be used as a LAST resort when no other tag is more appropriate. The HTML 5 specification states that headings should be denoted with the <h1> to <h6> tags, emphasized text should be denoted with the <em> tag, important text should be denoted with the <strong> tag, and marked/highlighted text should use the <mark> tag.
        Tip: You can also use the CSS "font-weight" property to set bold text.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "B", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class BASE(TagBase):
    '''
    [Definition and Usage]
        The <base> tag specifies the base URL/target for all relative URLs in a document.
        There can be at maximum one <base> element in a document, and it must be inside the <head> element.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        NONE.
    [Tips and Notes]
        Tip: Put the <base> tag as the first element inside the <head> element, so that other elements in the head section uses the information from the <base> element.
        Note: If the <base> tag is present, it must have either an href attribute or a target attribute, or both.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            HREF - [URL] Specifies the base URL for all relative URLs in the page
            TARGET - [_blank,_parent,_self,_top,framename] Specifies the default target for all hyperlinks and forms in the page

        """
        TagBase.__init__(self, "BASE", *contents, emptyTag=False)
        self.attrset = frozenset(["HREF","TARGET"])
        self.setAttr(**attrs)


class BASEFONT(TagBase):
    '''
    [Definition and Usage]
        The <basefont> tag is not supported in HTML5. Use CSS instead.
        The <basefont> element is deprecated in HTML 4.01.
        The <basefont> tag specifies a default font-color, font-size, or font-family for all the text in a document.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <basefont> tag is not supported in HTML5, and is deprecated in HTML 4.01.
    [Tips and Notes]
        Tip: Use CSS to specify a default font-color, font-size, and font-family for the text in a document.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Optional Attributes]:
            COLOR - [color] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the default color for text in a document
            FACE - [font_family] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the default font for text in a document
            SIZE - [number] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the default size of text in a document

        [Standard Attributes]:
            CLASS - [classname] Specifies a classname for an element
            DIR - [rtl,ltr] Specifies the text direction for the content in an element
            ID - [id] Specifies a unique id for an element
            LANG - [language_code] Specifies a language code for the content in an element
            STYLE - [style_definition] Specifies an inline style for an element
            TITLE - [text] Specifies extra information about an element

        """
        TagBase.__init__(self, "BASEFONT", *contents, emptyTag=False)
        self.attrset = frozenset(["COLOR","FACE","SIZE","CLASS","DIR","ID","LANG","STYLE","TITLE"])
        self.setAttr(**attrs)


class BDI(TagBase):
    '''
    [Definition and Usage]
        bdi stands for Bi-directional Isolation.
        The <bdi> tag isolates a part of text that might be formatted in a different direction from other text outside it.
        This element is useful when embedding user-generated content with an unknown directionality.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <bdi> tag is new in HTML5.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "BDI", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class BDO(TagBase):
    '''
    [Definition and Usage]
        bdo stands for Bi-Directional Override.
        The <bdo> tag is used to override the current text direction.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        NONE.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            DIR - [ltr,rtl] Required. Specifies the text direction of the text inside the <bdo> element

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "BDO", *contents, emptyTag=False)
        self.attrset = frozenset(["DIR","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class BIG(TagBase):
    '''
    [Definition and Usage]
        The <big> tag is not supported in HTML5. Use CSS instead.
        The <big> tag defines bigger text.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <big> tag is not supported in HTML5, but is supported in HTML 4.01.
    [Tips and Notes]
        Tip: Use CSS to specify the size of text in a document.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Standard Attributes]:
            CLASS - [classname] Specifies a classname for an element
            DIR - [rtl,ltr] Specifies the text direction for the content in an element
            ID - [id] Specifies a unique id for an element
            LANG - [language_code] Specifies a language code for the content in an element
            STYLE - [style_definition] Specifies an inline style for an element
            TITLE - [text] Specifies extra information about an element
            XML__LANG - [language_code] Specifies a language code for the content in an element, in XHTML documents

        """
        TagBase.__init__(self, "BIG", *contents, emptyTag=False)
        self.attrset = frozenset(["CLASS","DIR","ID","LANG","STYLE","TITLE","XML__LANG"])
        self.setAttr(**attrs)


class BLOCKQUOTE(TagBase):
    '''
    [Definition and Usage]
        The <blockquote> tag specifies a section that is quoted from another source.
        Browsers usually indent <blockquote> elements.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        In HTML 4.01, the <blockquote> tag defines a long quotation. In HTML5, the <blockquote> tag specifies a section that is quoted from another source.
    [Tips and Notes]
        Tip: Use <q> for inline (short) quotations.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            CITE - [URL] Specifies the source of the quotation

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "BLOCKQUOTE", *contents, emptyTag=False)
        self.attrset = frozenset(["CITE","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class BODY(TagBase):
    '''
    [Definition and Usage]
        The <body> tag defines the document's body.
        The <body> element contains all the contents of an HTML document, such as text, hyperlinks, images, tables, lists, etc.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        All layout attributes is removed from HTML5. All layout attributes is deprecated in HTML 4.01.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            ALINK - [color] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the color of an active link in a document
            BACKGROUND - [URL] Not supported in HTML5. Deprecated in HTML 4.01. Specifies a background image for a document
            BGCOLOR - [color] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the background color of a document
            LINK - [color] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the color of unvisited links in a document
            TEXT - [color] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the color of the text in a document
            VLINK - [color] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the color of visited links in a document

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "BODY", *contents, emptyTag=False)
        self.attrset = frozenset(["ALINK","BACKGROUND","BGCOLOR","LINK","TEXT","VLINK","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class BR(TagBase):
    '''
    [Definition and Usage]
        The <br> tag inserts a single line break.
        The <br> tag is an empty tag which means that it has no end tag.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        NONE.
    [Tips and Notes]
        Tip: The <br> tag is useful for writing addresses or poems.
        Note: Use the <br> tag to enter line breaks, not to separate paragraphs.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "BR", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class BUTTON(TagBase):
    '''
    [Definition and Usage]
        The <button> tag defines a clickable button.
        Inside a <button> element you can put content, like text or images. This is the difference between this element and buttons created with the <input> element.
        Tip: Always specify the type attribute for a <button> element. Different browsers use different default types for the <button> element.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        HTML5 has the following new attributes: autofocus, form, formaction, formenctype, formmethod, formnovalidate, and formtarget.
    [Tips and Notes]
        Note: If you use the <button> element in an HTML form, different browsers may submit different values. Use <input> to create buttons in an HTML form.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            AUTOFOCUS - [autofocus] New in HTML5. Specifies that a button should automatically get focus when the page loads
            DISABLED - [disabled] Specifies that a button should be disabled
            FORM - [form_id] New in HTML5. Specifies one or more forms the button belongs to
            FORMACTION - [URL] New in HTML5. Specifies where to send the form-data when a form is submitted. Only for type="submit"
            FORMENCTYPE - [application/x-www-form-urlencoded,multipart/form-data,text/plain] New in HTML5. Specifies how form-data should be encoded before sending it to a server. Only for type="submit"
            FORMMETHOD - [get,post] New in HTML5. Specifies how to send the form-data (which HTTP method to use). Only for type="submit"
            FORMNOVALIDATE - [formnovalidate] New in HTML5. Specifies that the form-data should not be validated on submission. Only for type="submit"
            FORMTARGET - [_blank,_self,_parent,_top,framename] New in HTML5. Specifies where to display the response after submitting the form. Only for type="submit"
            NAME - [name] Specifies a name for the button
            TYPE - [button,reset,submit] Specifies the type of button
            VALUE - [text] Specifies an initial value for the button

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "BUTTON", *contents, emptyTag=False)
        self.attrset = frozenset(["AUTOFOCUS","DISABLED","FORM","FORMACTION","FORMENCTYPE","FORMMETHOD","FORMNOVALIDATE","FORMTARGET","NAME","TYPE","VALUE","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class CANVAS(TagBase):
    '''
    [Definition and Usage]
        The <canvas> tag is used to draw graphics, on the fly, via scripting (usually JavaScript).
        The <canvas> tag is only a container for graphics, you must use a script to actually draw the graphics.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <canvas> tag is new in HTML5.
    [Tips and Notes]
        Note: Any text inside the <canvas> element will be displayed in browsers that does not support <canvas>.
        Tip: For a complete reference of all the properties and methods that can be used with the canvas object, go to our HTML Canvas Reference .
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            HEIGHT - [pixels] New in HTML5. Specifies the height of the canvas
            WIDTH - [pixels] New in HTML5. Specifies the width of the canvas

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "CANVAS", *contents, emptyTag=False)
        self.attrset = frozenset(["HEIGHT","WIDTH","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class CAPTION(TagBase):
    '''
    [Definition and Usage]
        The <caption> tag defines a table caption.
        The <caption> tag must be inserted immediately after the <table> tag.
        You can specify only one caption per table.
        Tip: By default, the table caption will be center-aligned above a table. However, the CSS properties "text-align" and "caption-side" can be used to align and place the caption.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The align attribute is removed from HTML5. The align attribute is deprecated in HTML 4.01.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            ALIGN - [left,right,top,bottom] Not supported in HTML5. Deprecated in HTML 4.01. Defines the alignment of the caption

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "CAPTION", *contents, emptyTag=False)
        self.attrset = frozenset(["ALIGN","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class CENTER(TagBase):
    '''
    [Definition and Usage]
        The <center> tag is not supported in HTML5. Use CSS instead.
        The <center> element is deprecated in HTML 4.01.
        The <center> tag is used to center-align text.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <center> tag is not supported in HTML5, and is deprecated in HTML 4.01.
    [Tips and Notes]
        Tip: Use CSS to center text! In our CSS tutorial you can find more details about centering text .
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Standard Attributes]:
            CLASS - [classname] Specifies a classname for an element
            DIR - [rtl,ltr] Specifies the text direction for the content in an element
            ID - [id] Specifies a unique id for an element
            LANG - [language_code] Specifies a language code for the content in an element
            STYLE - [style_definition] Specifies an inline style for an element
            TITLE - [text] Specifies extra information about an element

        [Event Attributes]:
            ONCLICK - [script] Script to be run on a mouse click
            ONDBLCLICK - [script] Script to be run on a mouse double-click
            ONMOUSEDOWN - [script] Script to be run when mouse button is pressed
            ONMOUSEMOVE - [script] Script to be run when mouse pointer moves
            ONMOUSEOUT - [script] Script to be run when mouse pointer moves out of an element
            ONMOUSEOVER - [script] Script to be run when mouse pointer moves over an element
            ONMOUSEUP - [script] Script to be run when mouse button is released
            ONKEYDOWN - [script] Script to be run when a key is pressed
            ONKEYPRESS - [script] Script to be run when a key is pressed and released
            ONKEYUP - [script] Script to be run when a key is released

        """
        TagBase.__init__(self, "CENTER", *contents, emptyTag=False)
        self.attrset = frozenset(["CLASS","DIR","ID","LANG","STYLE","TITLE","ONCLICK","ONDBLCLICK","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class CITE(TagBase):
    '''
    [Definition and Usage]
        The <cite> tag defines the title of a work (e.g. a book, a song, a movie, a TV show, a painting, a sculpture, etc.).
        Note: A person's name is not the title of a work.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        In HTML5, the <cite> tag defines the title of a work. In HTML 4.01, the <cite> tag defines a citation.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "CITE", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class CODE(TagBase):
    '''
    [Definition and Usage]
        The <em>, <strong>, <dfn>, <code>, <samp>, <kbd>, and <var> tags are all phrase tags. They are not deprecated, but it is possible to achieve richer effect with CSS.
        Tag
        Description
        <em>
        Renders as emphasized text
        <strong>
        Defines important text
        <dfn>
        Defines a definition term
        <code>
        Defines a piece of computer code
        <samp>
        Defines sample output from a computer program
        <kbd>
        Defines keyboard input
        <var>
        Defines a variable
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        In HTML 4.01, the <strong> tag defines strong emphasized text, but in HTML5 it defines important text.
    '''
    def __init__(self, *contents):
        """
        *contents - [tuple] tag contents.

        """
        TagBase.__init__(self, "CODE", *contents, emptyTag=False)


class COL(TagBase):
    '''
    [Definition and Usage]
        The <col> tag specifies column properties for each column within a <colgroup> element.
        The <col> tag is useful for applying styles to entire columns, instead of repeating the styles for each cell, for each row.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        Most of the attributes in HTML 4.01 are not supported in HTML5.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            ALIGN - [left,right,center,justify,char] Not supported in HTML5. Specifies the alignment of the content related to a <col> element
            CHAR - [character] Not supported in HTML5. Specifies the alignment of the content related to a <col> element to a character
            CHAROFF - [number] Not supported in HTML5. Specifies the number of characters the content will be aligned from the character specified by the char attribute
            SPAN - [number] Specifies the number of columns a <col> element should span
            VALIGN - [top,middle,bottom,baseline] Not supported in HTML5. Specifies the vertical alignment of the content related to a <col> element
            WIDTH - [%,pixels,relative_length] Not supported in HTML5. Specifies the width of a <col> element

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "COL", *contents, emptyTag=False)
        self.attrset = frozenset(["ALIGN","CHAR","CHAROFF","SPAN","VALIGN","WIDTH","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class COLGROUP(TagBase):
    '''
    [Definition and Usage]
        The <colgroup> tag specifies a group of one or more columns in a table for formatting.
        The <colgroup> tag is useful for applying styles to entire columns, instead of repeating the styles for each cell, for each row.
        Note: The <colgroup> tag must be a child of a <table> element, after any <caption> elements and before any <thead>, <tbody>, <tfoot>, and <tr> elements.
        Tip: To define different properties to a column within a <colgroup>, use the <col> tag within the <colgroup> tag.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        Most of the attributes in HTML 4.01 are not supported in HTML5.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            ALIGN - [left,right,center,justify,char] Not supported in HTML5. Aligns the content in a column group
            CHAR - [character] Not supported in HTML5. Aligns the content in a column group to a character
            CHAROFF - [number] Not supported in HTML5. Sets the number of characters the content will be aligned from the character specified by the char attribute
            SPAN - [number] Specifies the number of columns a column group should span
            VALIGN - [top,middle,bottom,baseline] Not supported in HTML5. Vertical aligns the content in a column group
            WIDTH - [pixels,%,relative_length] Not supported in HTML5. Specifies the width of a column group

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "COLGROUP", *contents, emptyTag=False)
        self.attrset = frozenset(["ALIGN","CHAR","CHAROFF","SPAN","VALIGN","WIDTH","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class COMMAND(TagBase):
    '''
    [Definition and Usage]
        The <command> tag defines a command (a radiobutton, a checkbox, or a command button) that the user can invoke.
        A command can be part of a context menu or toolbar, using the <menu> element, or can be put anywhere else in the page, to define a keyboard shortcut.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <command> tag is new in HTML5.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            CHECKED - [checked] New in HTML5. Specifies that the command should be checked when the page loads. Only for type="radio" or type="checkbox"
            DISABLED - [disabled] New in HTML5. Specifies that the command should be disabled
            ICON - [URL] New in HTML5. Specifies an image that represents the command
            LABEL - [text] New in HTML5. Required. Specifies the name of the command, as shown to the user
            RADIOGROUP - [groupname] New in HTML5. Specifies the name of the group of commands that will be toggled when the command itself is toggled. Only for type="radio"
            TYPE - [checkbox,command,radio] New in HTML5. Specifies the type of command

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "COMMAND", *contents, emptyTag=False)
        self.attrset = frozenset(["CHECKED","DISABLED","ICON","LABEL","RADIOGROUP","TYPE","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class DATALIST(TagBase):
    '''
    [Definition and Usage]
        The <datalist> tag specifies a list of pre-defined options for an <input> element.
        The <datalist> tag is used to provide an "autocomplete" feature on <input> elements. Users will see a drop-down list of pre-defined options as they input data.
        Use the <input> element's list attribute to bind it together with a <datalist> element.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <datalist> tag is new in HTML5.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "DATALIST", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class DD(TagBase):
    '''
    [Definition and Usage]
        The <dd> tag is used to describe an item in a definition list.
        The <dd> tag is used in conjunction with <dl> (defines the definition list) and <dt> (defines the item in the list).
        Inside a <dd> tag you can put paragraphs, line breaks, images, links, lists, etc.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        NONE.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "DD", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class DEL(TagBase):
    '''
    [Definition and Usage]
        The <del> tag defines text that has been deleted from a document.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        NONE.
    [Tips and Notes]
        Tip: Also look at the <ins> tag to markup inserted text.
        Tip: Use <del> and <ins> to markup updates and modifications in a document. Browsers will normally strike a line through deleted text and underline inserted text.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            CITE - [URL] Specifies a URL to a document that explains the reason why the text was deleted
            DATETIME - [YYYY-MM-DDThh:mm:ssTZD] Specifies the date and time of when the text was deleted

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "DEL", *contents, emptyTag=False)
        self.attrset = frozenset(["CITE","DATETIME","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class DETAILS(TagBase):
    '''
    [Definition and Usage]
        The <details> tag specifies additional details that the user can view or hide on demand.
        The <details> tag can used to create an interactive widget that the user can open and close. Any sort of content can be put inside the <details> tag.
        The content of a <details> element should not be visible unless the open attribute is set.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <details> tag is new in HTML5.
    [Tips and Notes]
        Tip: The <summary> tag is used to specify a visible heading for the details. The heading can be clicked to view/hide the details.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            OPEN - [open] New in HTML5. Specifies that the details should be visible (open) to the user

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "DETAILS", *contents, emptyTag=False)
        self.attrset = frozenset(["OPEN","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class DFN(TagBase):
    '''
    [Definition and Usage]
        The <em>, <strong>, <dfn>, <code>, <samp>, <kbd>, and <var> tags are all phrase tags. They are not deprecated, but it is possible to achieve richer effect with CSS.
        Tag
        Description
        <em>
        Renders as emphasized text
        <strong>
        Defines important text
        <dfn>
        Defines a definition term
        <code>
        Defines a piece of computer code
        <samp>
        Defines sample output from a computer program
        <kbd>
        Defines keyboard input
        <var>
        Defines a variable
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        In HTML 4.01, the <strong> tag defines strong emphasized text, but in HTML5 it defines important text.
    '''
    def __init__(self, *contents):
        """
        *contents - [tuple] tag contents.

        """
        TagBase.__init__(self, "DFN", *contents, emptyTag=False)


class DIR(TagBase):
    '''
    [Definition and Usage]
        The <dir> tag is not supported in HTML5. Use CSS instead.
        The <dir> element is deprecated in HTML 4.01.
        The <dir> tag is used to list directory titles.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <dir> tag is not supported in HTML5, and is deprecated in HTML 4.01.
    [Tips and Notes]
        Tip: Use CSS to style lists! In our CSS tutorial you can find more details about styling lists .
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Optional Attributes]:
            COMPACT - [compact] Not supported in HTML5. Deprecated in HTML 4.01. Specifies that the list should render smaller than normal

        [Standard Attributes]:
            CLASS - [classname] Specifies a classname for an element
            DIR - [rtl,ltr] Specifies the text direction for the content in an element
            ID - [id] Specifies a unique id for an element
            LANG - [language_code] Specifies a language code for the content in an element
            STYLE - [style_definition] Specifies an inline style for an element
            TITLE - [text] Specifies extra information about an element

        [Event Attributes]:
            ONCLICK - [script] Script to be run on a mouse click
            ONDBLCLICK - [script] Script to be run on a mouse double-click
            ONMOUSEDOWN - [script] Script to be run when mouse button is pressed
            ONMOUSEMOVE - [script] Script to be run when mouse pointer moves
            ONMOUSEOUT - [script] Script to be run when mouse pointer moves out of an element
            ONMOUSEOVER - [script] Script to be run when mouse pointer moves over an element
            ONMOUSEUP - [script] Script to be run when mouse button is released
            ONKEYDOWN - [script] Script to be run when a key is pressed
            ONKEYPRESS - [script] Script to be run when a key is pressed and released
            ONKEYUP - [script] Script to be run when a key is released

        """
        TagBase.__init__(self, "DIR", *contents, emptyTag=False)
        self.attrset = frozenset(["COMPACT","CLASS","DIR","ID","LANG","STYLE","TITLE","ONCLICK","ONDBLCLICK","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class DIV(TagBase):
    '''
    [Definition and Usage]
        The <div> tag defines a division or a section in an HTML document.
        The <div> tag is used to group block-elements to format them with CSS.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The align attribute not supported in HTML5. The align attribute is deprecated in HTML 4.01.
    [Tips and Notes]
        Tip: The <div> element is very often used together with CSS, to layout a web page.
        Note: By default, browsers always place a line break before and after the <div> element. However, this can be changed with CSS.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            ALIGN - [left,right,center,justify] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the alignment of the content inside a <div> element

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "DIV", *contents, emptyTag=False)
        self.attrset = frozenset(["ALIGN","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class DL(TagBase):
    '''
    [Definition and Usage]
        The <dl> tag defines a definition list.
        The <dl> tag is used in conjunction with <dt> (defines the item in the list) and <dd> (describes the item in the list).
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        NONE.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "DL", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class DT(TagBase):
    '''
    [Definition and Usage]
        The <dt> tag defines an item in a definition list.
        The <dt> tag is used in conjunction with <dl> (defines the definition list) and <dd> (describes the item in the list).
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        NONE.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "DT", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class EM(TagBase):
    '''
    [Definition and Usage]
        The <em>, <strong>, <dfn>, <code>, <samp>, <kbd>, and <var> tags are all phrase tags. They are not deprecated, but it is possible to achieve richer effect with CSS.
        Tag
        Description
        <em>
        Renders as emphasized text
        <strong>
        Defines important text
        <dfn>
        Defines a definition term
        <code>
        Defines a piece of computer code
        <samp>
        Defines sample output from a computer program
        <kbd>
        Defines keyboard input
        <var>
        Defines a variable
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        In HTML 4.01, the <strong> tag defines strong emphasized text, but in HTML5 it defines important text.
    '''
    def __init__(self, *contents):
        """
        *contents - [tuple] tag contents.

        """
        TagBase.__init__(self, "EM", *contents, emptyTag=False)


class EMBED(TagBase):
    '''
    [Definition and Usage]
        The <embed> tag defines a container for an external application or interactive content (a plug-in).
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <embed> tag is new in HTML5.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            HEIGHT - [pixels] New in HTML5. Specifies the height of the embedded content
            SRC - [URL] New in HTML5. Specifies the address of the external file to embed
            TYPE - [MIME_type] New in HTML5. Specifies the MIME type of the embedded content
            WIDTH - [pixels] New in HTML5. Specifies the width of the embedded content

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "EMBED", *contents, emptyTag=False)
        self.attrset = frozenset(["HEIGHT","SRC","TYPE","WIDTH","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class FIELDSET(TagBase):
    '''
    [Definition and Usage]
        The <fieldset> tag is used to group related elements in a form.
        The <fieldset> tag draws a box around the related elements.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        HTML5 has added new attributes for <fieldset>.
    [Tips and Notes]
        Tip: The <legend> tag defines a caption for the <fieldset> element.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            DISABLED - [disabled] New in HTML5. Specifies that a group of related form elements should be disabled
            FORM - [form_id] New in HTML5. Specifies one or more forms the fieldset belongs to
            NAME - [text] New in HTML5. Specifies a name for the fieldset

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "FIELDSET", *contents, emptyTag=False)
        self.attrset = frozenset(["DISABLED","FORM","NAME","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class FIGCAPTION(TagBase):
    '''
    [Definition and Usage]
        The <figcaption> tag defines a caption for a <figure> element.
        The <figcaption> element can be placed as the first or last child of the <figure> element.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <figcaption> tag is new in HTML5.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "FIGCAPTION", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class FIGURE(TagBase):
    '''
    [Definition and Usage]
        The <figure> tag specifies self-contained content, like illustrations, diagrams, photos, code listings, etc.
        While the content of the <figure> element is related to the main flow, its position is independent of the main flow, and if removed it should not affect the flow of the document.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <figure> tag is new in HTML5.
    [Tips and Notes]
        Tip: The <figcaption> element is used to add a caption for the <figure> element.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "FIGURE", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class FONT(TagBase):
    '''
    [Definition and Usage]
        The <font> tag is not supported in HTML5. Use CSS instead.
        The <font> element is deprecated in HTML 4.01.
        The <font> tag specifies the font face, font size, and font color of text.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <font> tag is not supported in HTML5, and is deprecated in HTML 4.01.
    [Tips and Notes]
        Tip: Use CSS to define the font, size, and color of text.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Optional Attributes]:
            COLOR - [rgb(x,x,x),#xxxxxx,colorname] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the color of text
            FACE - [font_family] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the font of text
            SIZE - [number] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the size of text

        [Standard Attributes]:
            CLASS - [classname] Specifies a classname for an element
            DIR - [rtl,ltr] Specifies the text direction for the content in an element
            ID - [id] Specifies a unique id for an element
            LANG - [language_code] Specifies a language code for the content in an element
            STYLE - [style_definition] Specifies an inline style for an element
            TITLE - [text] Specifies extra information about an element

        """
        TagBase.__init__(self, "FONT", *contents, emptyTag=False)
        self.attrset = frozenset(["COLOR","FACE","SIZE","CLASS","DIR","ID","LANG","STYLE","TITLE"])
        self.setAttr(**attrs)


class FOOTER(TagBase):
    '''
    [Definition and Usage]
        The <footer> tag defines a footer for a document or section.
        A <footer> element should contain information about its containing element.
        A footer typically contains the author of the document, copyright information, links to terms of use, contact information, etc.
        You can have several <footer> elements in one document.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <footer> tag is new in HTML5.
    [Tips and Notes]
        Tip: Contact information inside a <footer> element should go inside an <address> tag.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "FOOTER", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class FORM(TagBase):
    '''
    [Definition and Usage]
        The <form> tag is used to create an HTML form for user input.
        The <form> element can contain one or more of the following form elements:
        <input>
        <textarea>
        <button>
        <select>
        <option>
        <optgroup>
        <fieldset>
        <label>
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        HTML5 has added two new attributes: autocomplete and novalidate, and removed the accept attribute.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            ACCEPT - [MIME_type] Not supported in HTML5. Specifies the types of files that the server accepts (that can be submitted through a file upload)
            ACCEPT_CHARSET - [character_set] Specifies the character encodings that are to be used for the form submission
            ACTION - [URL] Specifies where to send the form-data when a form is submitted
            AUTOCOMPLETE - [on,off] New in HTML5. Specifies whether a form should have autocomplete on or off
            ENCTYPE - [application/x-www-form-urlencoded,multipart/form-data,text/plain] Specifies how the form-data should be encoded when submitting it to the server (only for method="post")
            METHOD - [get,post] Specifies the HTTP method to use when sending form-data
            NAME - [text] Specifies the name of a form
            NOVALIDATE - [novalidate] New in HTML5. Specifies that the form should not be validated when submitted
            TARGET - [_blank,_self,_parent,_top] Specifies where to display the response that is received after submitting the form

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "FORM", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCEPT","ACCEPT_CHARSET","ACTION","AUTOCOMPLETE","ENCTYPE","METHOD","NAME","NOVALIDATE","TARGET","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class FRAME(TagBase):
    '''
    [Definition and Usage]
        The <frame> tag is not supported in HTML5.
        The <frame> tag defines one particular window (frame) within a <frameset>.
        Each <frame> in a <frameset> can have different attributes, such as border, scrolling, the ability to resize, etc.
        Note: If you want to validate a page containing frames, be sure the <!DOCTYPE> is set to either "HTML Frameset DTD" or "XHTML Frameset DTD".
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <frame> tag is not supported in HTML5, but is supported in HTML 4.01.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Optional Attributes]:
            FRAMEBORDER - [0,1] Not supported in HTML5. Specifies whether or not to display a border around a frame
            LONGDESC - [URL] Not supported in HTML5. Specifies a page that contains a long description of the content of a frame
            MARGINHEIGHT - [pixels] Not supported in HTML5. Specifies the top and bottom margins of a frame
            MARGINWIDTH - [pixels] Not supported in HTML5. Specifies the left and right margins of a frame
            NAME - [name] Not supported in HTML5. Specifies the name of a frame
            NORESIZE - [noresize] Not supported in HTML5. Specifies that a frame is not resizable
            SCROLLING - [yes,no,auto] Not supported in HTML5. Specifies whether or not to display scrollbars in a frame
            SRC - [URL] Not supported in HTML5. Specifies the URL of the document to show in a frame

        [Standard Attributes]:
            CLASS - [classname] Specifies a classname for an element
            ID - [id] Specifies a unique id for an element
            STYLE - [style_definition] Specifies an inline style for an element
            TITLE - [text] Specifies extra information about an element

        """
        TagBase.__init__(self, "FRAME", *contents, emptyTag=False)
        self.attrset = frozenset(["FRAMEBORDER","LONGDESC","MARGINHEIGHT","MARGINWIDTH","NAME","NORESIZE","SCROLLING","SRC","CLASS","ID","STYLE","TITLE"])
        self.setAttr(**attrs)


class FRAMESET(TagBase):
    '''
    [Definition and Usage]
        The <frameset> tag is not supported in HTML5.
        The <frameset> tag defines a frameset.
        The <frameset> element holds one or more <frame> elements. Each <frame> element can hold a separate document.
        The <frameset> element specifies HOW MANY columns or rows there will be in the frameset, and HOW MUCH percentage/pixels of space will occupy each of them.
        Note: If you want to validate a page containing frames, be sure the <!DOCTYPE> is set to either "HTML Frameset DTD" or "XHTML Frameset DTD".
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Optional Attributes]:
            COLS - [pixels,%,*] Not supported in HTML5. Specifies the number and size of columns in a frameset
            ROWS - [pixels,%,*] Not supported in HTML5. Specifies the number and size of rows in a frameset

        [Standard Attributes]:
            CLASS - [classname] Specifies a classname for an element
            ID - [id] Specifies a unique id for an element
            STYLE - [style_definition] Specifies an inline style for an element
            TITLE - [text] Specifies extra information about an element

        [Event Attributes]:
            ONLOAD - [script] Script to be run when a document load
            ONUNLOAD - [script] Script to be run when a document unload

        """
        TagBase.__init__(self, "FRAMESET", *contents, emptyTag=False)
        self.attrset = frozenset(["COLS","ROWS","CLASS","ID","STYLE","TITLE","ONLOAD","ONUNLOAD"])
        self.setAttr(**attrs)


class HEAD(TagBase):
    '''
    [Definition and Usage]
        The <head> element is a container for all the head elements.
        The <head> element must include a title for the document, and can include scripts, styles, meta information, and more.
        The following elements can go inside the <head> element:
        <title> (this element is required in the head section)
        <style>
        <base>
        <link>
        <meta>
        <script>
        <noscript>
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The profile attribute is not supported in HTML5.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            PROFILE - [URL] Not supported in HTML5. Specifies a URL to a document that contains a set of rules. The rules can be read by browsers to clearly understand the information in the <meta> tag's content attribute

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        """
        TagBase.__init__(self, "HEAD", *contents, emptyTag=False)
        self.attrset = frozenset(["PROFILE","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE"])
        self.setAttr(**attrs)


class HEADER(TagBase):
    '''
    [Definition and Usage]
        The <header> tag specifies a header for a document or section.
        The <header> element should be used as a container for introductory content or set of navigational links.
        You can have several <header> elements in one document.
        Note: A <header> tag cannot be placed within a <footer>, <address> or another <header> element.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <header> tag is new in HTML5.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "HEADER", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class HGROUP(TagBase):
    '''
    [Definition and Usage]
        The <hgroup> tag is used to group heading elements.
        The <hgroup> element is used to group a set of <h1> to <h6> elements, when a heading has multiple levels (subheadings).
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <hgroup> tag is new in HTML5.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "HGROUP", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class H1(TagBase):
    '''
    [Definition and Usage]
        The &lt;h1&gt; to &lt;h6&gt; tags are used to define HTML headings.
        &lt;h1&gt; defines the most important heading. &lt;h6&gt; defines the least important heading.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The "align" attribute is deprecated in HTML 4.01, and is not supported in HTML5. Use CSS to align elements.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            ALIGN - [left,center,right,justify] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the alignment of a heading

        """
        TagBase.__init__(self, "H1", *contents, emptyTag=False)
        self.attrset = frozenset(["ALIGN"])
        self.setAttr(**attrs)


class H2(TagBase):
    '''
    [Definition and Usage]
        The &lt;h1&gt; to &lt;h6&gt; tags are used to define HTML headings.
        &lt;h1&gt; defines the most important heading. &lt;h6&gt; defines the least important heading.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The "align" attribute is deprecated in HTML 4.01, and is not supported in HTML5. Use CSS to align elements.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            ALIGN - [left,center,right,justify] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the alignment of a heading

        """
        TagBase.__init__(self, "H2", *contents, emptyTag=False)
        self.attrset = frozenset(["ALIGN"])
        self.setAttr(**attrs)


class H3(TagBase):
    '''
    [Definition and Usage]
        The &lt;h1&gt; to &lt;h6&gt; tags are used to define HTML headings.
        &lt;h1&gt; defines the most important heading. &lt;h6&gt; defines the least important heading.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The "align" attribute is deprecated in HTML 4.01, and is not supported in HTML5. Use CSS to align elements.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            ALIGN - [left,center,right,justify] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the alignment of a heading

        """
        TagBase.__init__(self, "H3", *contents, emptyTag=False)
        self.attrset = frozenset(["ALIGN"])
        self.setAttr(**attrs)


class H4(TagBase):
    '''
    [Definition and Usage]
        The &lt;h1&gt; to &lt;h6&gt; tags are used to define HTML headings.
        &lt;h1&gt; defines the most important heading. &lt;h6&gt; defines the least important heading.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The "align" attribute is deprecated in HTML 4.01, and is not supported in HTML5. Use CSS to align elements.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            ALIGN - [left,center,right,justify] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the alignment of a heading

        """
        TagBase.__init__(self, "H4", *contents, emptyTag=False)
        self.attrset = frozenset(["ALIGN"])
        self.setAttr(**attrs)


class H5(TagBase):
    '''
    [Definition and Usage]
        The &lt;h1&gt; to &lt;h6&gt; tags are used to define HTML headings.
        &lt;h1&gt; defines the most important heading. &lt;h6&gt; defines the least important heading.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The "align" attribute is deprecated in HTML 4.01, and is not supported in HTML5. Use CSS to align elements.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            ALIGN - [left,center,right,justify] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the alignment of a heading

        """
        TagBase.__init__(self, "H5", *contents, emptyTag=False)
        self.attrset = frozenset(["ALIGN"])
        self.setAttr(**attrs)


class H6(TagBase):
    '''
    [Definition and Usage]
        The &lt;h1&gt; to &lt;h6&gt; tags are used to define HTML headings.
        &lt;h1&gt; defines the most important heading. &lt;h6&gt; defines the least important heading.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The "align" attribute is deprecated in HTML 4.01, and is not supported in HTML5. Use CSS to align elements.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            ALIGN - [left,center,right,justify] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the alignment of a heading

        """
        TagBase.__init__(self, "H6", *contents, emptyTag=False)
        self.attrset = frozenset(["ALIGN"])
        self.setAttr(**attrs)


class HR(TagBase):
    '''
    [Definition and Usage]
        The <hr> tag defines a thematic break in an HTML page (e.g. a shift of topic).
        The <hr> element is used to separate content (or define a change) in an HTML page.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        In HTML5, the <hr> tag defines a thematic break. In HTML 4.01, the <hr> tag represents a horizontal rule. However, the <hr> tag may still be displayed as a horizontal rule in visual browsers, but is now defined in semantic terms, rather than presentational terms. All layout attributes are deprecated in HTML 4.01, and are not supported in HTML5. Use CSS to style the <hr> element instead.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            ALIGN - [left,center,right] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the alignment of a <hr> element
            NOSHADE - [noshade] Not supported in HTML5. Deprecated in HTML 4.01. Specifies that a <hr> element should render in one solid color (noshaded), instead of a shaded color
            SIZE - [pixels] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the height of a <hr> element
            WIDTH - [pixels,%] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the width of a <hr> element

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "HR", *contents, emptyTag=False)
        self.attrset = frozenset(["ALIGN","NOSHADE","SIZE","WIDTH","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class HTML(TagBase):
    '''
    [Definition and Usage]
        The <html> tag tells the browser that this is an HTML document.
        The <html> tag represents the root of an HTML document.
        The <html> tag is the container for all other HTML elements (except for the <!DOCTYPE> tag).
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        HTML5 has added a new attribute: manifest.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            MANIFEST - [URL] New in HTML5. Specifies the address of the document's cache manifest (for offline browsing)
            XMLNS - [http://www.w3.org/1999/xhtml] Not supported in HTML. Only for XHTML. Specifies the XML namespace attribute (If you need your content to conform to XHTML)

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        """
        TagBase.__init__(self, "HTML", *contents, emptyTag=False)
        self.attrset = frozenset(["MANIFEST","XMLNS","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE"])
        self.setAttr(**attrs)


class I(TagBase):
    '''
    [Definition and Usage]
        The <i> tag defines a part of text in an alternate voice or mood. The content of the <i> tag is usually displayed in italic.
        The <i> tag can be used to indicate a technical term, a phrase from another language, a thought, or a ship name, etc.
        Use the <i> element only when there is not a more appropriate semantic element, such as:
        <em> (emphasized text)
        <strong> (important text)
        <mark> (marked/highlighted text)
        <cite> (the title of a work)
        <dfn> (a definition term)
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        In HTML 4.01, the <i> tag was used to render text in italics. However, this is not necessarily the case with HTML5. Style sheets can be used to format the text inside the <i> element.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "I", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class IFRAME(TagBase):
    '''
    [Definition and Usage]
        The <iframe> tag specifies an inline frame.
        An inline frame is used to embed another document within the current HTML document.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        HTML5 has added some new attributes, and several HTML 4.01 attributes are removed from HTML5.
    [Tips and Notes]
        Tip: To deal with browsers that do not support <iframe>, add a text between the opening <iframe> tag and the closing </iframe> tag.
        Tip: Use CSS to style the <iframe> (even to include scrollbars).
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            ALIGN - [left,right,top,middle,bottom] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the alignment of an <iframe> according to surrounding elements
            FRAMEBORDER - [1,0] Not supported in HTML5. Specifies whether or not to display a border around an <iframe>
            HEIGHT - [pixels] Specifies the height of an <iframe>
            LONGDESC - [URL] Not supported in HTML5. Specifies a page that contains a long description of the content of an <iframe>
            MARGINHEIGHT - [pixels] Not supported in HTML5. Specifies the top and bottom margins of the content of an <iframe>
            MARGINWIDTH - [pixels] Not supported in HTML5. Specifies the left and right margins of the content of an <iframe>
            NAME - [name] Specifies the name of an <iframe>
            SANDBOX - ["",allow-forms,allow-same-origin,allow-scripts,allow-top-navigation] New in HTML5. Enables a set of extra restrictions for the content in the <iframe>
            SCROLLING - [yes,no,auto] Not supported in HTML5. Specifies whether or not to display scrollbars in an <iframe>
            SEAMLESS - [seamless] New in HTML5. Specifies that the <iframe> should look like it is a part of the containing document
            SRC - [URL] Specifies the address of the document to embed in the <iframe>
            SRCDOC - [HTML_code] New in HTML5. Specifies the HTML content of the page to show in the <iframe>
            WIDTH - [pixels] Specifies the width of an <iframe>

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "IFRAME", *contents, emptyTag=False)
        self.attrset = frozenset(["ALIGN","FRAMEBORDER","HEIGHT","LONGDESC","MARGINHEIGHT","MARGINWIDTH","NAME","SANDBOX","SCROLLING","SEAMLESS","SRC","SRCDOC","WIDTH","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class IMG(TagBase):
    '''
    [Definition and Usage]
        The <img> tag defines an image in an HTML page.
        The <img> tag has two required attributes: src and alt.
        Note: Images are not technically inserted into an HTML page, images are linked to HTML pages. The <img> tag creates a holding space for the referenced image.
        Tip: To link an image to another document, simply nest the <img> tag inside <a> tags.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The following attributes: align, border, hspace, longdesc, and vspace is not supported in HTML5. The following attributes: align, border, hspace, and vspace are deprecated in HTML 4.01.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            ALIGN - [top,bottom,middle,left,right] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the alignment of an image according to surrounding elements
            ALT - [text] Specifies an alternate text for an image
            BORDER - [pixels] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the width of the border around an image
            CROSSORIGIN - [anonymous,use-credentials] New in HTML5. Allow images from third-party sites that allow cross-origin access to be used with canvas
            HEIGHT - [pixels] Specifies the height of an image
            HSPACE - [pixels] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the whitespace on left and right side of an image
            ISMAP - [ismap] Specifies an image as a server-side image-map
            LONGDESC - [URL] Not supported in HTML5. Specifies the URL to a document that contains a long description of an image
            SRC - [URL] Specifies the URL of an image
            USEMAP - [#mapname] Specifies an image as a client-side image-map
            VSPACE - [pixels] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the whitespace on top and bottom of an image
            WIDTH - [pixels] Specifies the width of an image

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "IMG", *contents, emptyTag=False)
        self.attrset = frozenset(["ALIGN","ALT","BORDER","CROSSORIGIN","HEIGHT","HSPACE","ISMAP","LONGDESC","SRC","USEMAP","VSPACE","WIDTH","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class INPUT(TagBase):
    '''
    [Definition and Usage]
        The <input> tag specifies an input field where the user can enter data.
        <input> elements are used within a <form> element to declare input controls that allow users to input data.
        An input field can vary in many ways, depending on the type attribute.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        In HTML 4.01, the "align" attribute is deprecated , and it is not supported in HTML5. Use CSS to align <input> elements. In HTML5, the <input> tag has several new attributes, and the type attribute has several new values.
    [Tips and Notes]
        Note: The <input> element is empty, it contains attributes only.
        Tip: Use the <label> element to define labels for <input> elements.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            ACCEPT - [audio/*,video/*,image/*,MIME_type] Specifies the types of files that the server accepts (only for type="file")
            ALIGN - [left,right,top,middle,bottom] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the alignment of an image input (only for type="image")
            ALT - [text] Specifies an alternate text for images (only for type="image")
            AUTOCOMPLETE - [on,off] New in HTML5. Specifies whether an <input> element should have autocomplete enabled
            AUTOFOCUS - [autofocus] New in HTML5. Specifies that an <input> element should automatically get focus when the page loads
            CHECKED - [checked] Specifies that an <input> element should be pre-selected when the page loads (for type="checkbox" or type="radio")
            DISABLED - [disabled] Specifies that an <input> element should be disabled
            FORM - [form_id] New in HTML5. Specifies one or more forms the <input> element belongs to
            FORMACTION - [URL] New in HTML5. Specifies the URL of the file that will process the input control when the form is submitted (for type="submit" and type="image")
            FORMENCTYPE - [application/x-www-form-urlencoded,multipart/form-data,text/plain] New in HTML5. Specifies how the form-data should be encoded when submitting it to the server (for type="submit" and type="image")
            FORMMETHOD - [get,post] New in HTML5. Defines the HTTP method for sending data to the action URL (for type="submit" and type="image")
            FORMNOVALIDATE - [formnovalidate] New in HTML5. Defines that form elements should not be validated when submitted
            FORMTARGET - [_blank,_self,_parent,_top,framename] New in HTML5. Specifies where to display the response that is received after submitting the form (for type="submit" and type="image")
            HEIGHT - [pixels] New in HTML5. Specifies the height of an <input> element (only for type="image")
            LIST - [datalist_id] New in HTML5. Refers to a <datalist> element that contains pre-defined options for an <input> element
            MAX - [number,date] New in HTML5. Specifies the maximum value for an <input> element
            MAXLENGTH - [number] Specifies the maximum number of characters allowed in an <input> element
            MIN - [number,date] New in HTML5. Specifies a minimum value for an <input> element
            MULTIPLE - [multiple] New in HTML5. Specifies that a user can enter more than one value in an <input> element
            NAME - [text] Specifies the name of an <input> element
            PATTERN - [regexp] New in HTML5. Specifies a regular expression that an <input> element's value is checked against
            PLACEHOLDER - [text] New in HTML5. Specifies a short hint that describes the expected value of an <input> element
            READONLY - [readonly] Specifies that an input field is read-only
            REQUIRED - [required] New in HTML5. Specifies that an input field must be filled out before submitting the form
            SIZE - [number] Specifies the width, in characters, of an <input> element
            SRC - [URL] Specifies the URL of the image to use as a submit button (only for type="image")
            STEP - [number] New in HTML5. Specifies the legal number intervals for an input field
            TYPE - [button,checkbox,color,date,datetime,datetime-local,email,file,hidden,image,month,number,password,radio,range,reset,search,submit,tel,text,time,url,week] Specifies the type <input> element to display
            VALUE - [text] Specifies the value of an <input> element
            WIDTH - [pixels] New in HTML5. Specifies the width of an <input> element (only for type="image")

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "INPUT", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCEPT","ALIGN","ALT","AUTOCOMPLETE","AUTOFOCUS","CHECKED","DISABLED","FORM","FORMACTION","FORMENCTYPE","FORMMETHOD","FORMNOVALIDATE","FORMTARGET","HEIGHT","LIST","MAX","MAXLENGTH","MIN","MULTIPLE","NAME","PATTERN","PLACEHOLDER","READONLY","REQUIRED","SIZE","SRC","STEP","TYPE","VALUE","WIDTH","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class INS(TagBase):
    '''
    [Definition and Usage]
        The <ins> tag defines a text that has been inserted into a document.
        Tip: Also look at the <del> tag to markup deleted text.
        Browsers will normally strike a line through deleted text and underline inserted text.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        NONE.
    [Tips and Notes]
        Tip: Use <ins> it together with <del> to markup updates and modifications in a document.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            CITE - [URL] Specifies a URL to a document that explains the reason why the text was inserted/changed
            DATETIME - [YYYY-MM-DDThh:mm:ssTZD] Specifies the date and time when the text was inserted/changed

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "INS", *contents, emptyTag=False)
        self.attrset = frozenset(["CITE","DATETIME","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class KBD(TagBase):
    '''
    [Definition and Usage]
        The <em>, <strong>, <dfn>, <code>, <samp>, <kbd>, and <var> tags are all phrase tags. They are not deprecated, but it is possible to achieve richer effect with CSS.
        Tag
        Description
        <em>
        Renders as emphasized text
        <strong>
        Defines important text
        <dfn>
        Defines a definition term
        <code>
        Defines a piece of computer code
        <samp>
        Defines sample output from a computer program
        <kbd>
        Defines keyboard input
        <var>
        Defines a variable
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        In HTML 4.01, the <strong> tag defines strong emphasized text, but in HTML5 it defines important text.
    '''
    def __init__(self, *contents):
        """
        *contents - [tuple] tag contents.

        """
        TagBase.__init__(self, "KBD", *contents, emptyTag=False)


class KEYGEN(TagBase):
    '''
    [Definition and Usage]
        The <keygen> tag specifies a key-pair generator field used for forms.
        When the form is submitted, the private key is stored locally, and the public key is sent to the server.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <keygen> element is new in HTML5.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            AUTOFOCUS - [autofocus] New in HTML5. Specifies that a <keygen> element should automatically get focus when the page loads
            CHALLENGE - [challenge] New in HTML5. Specifies that the value of the <keygen> element should be challenged when submitted
            DISABLED - [disabled] New in HTML5. Specifies that a <keygen> element should be disabled
            FORM - [form_id] New in HTML5. Specifies one or more forms the <keygen> element belongs to
            KEYTYPE - [rsa,dsa,ec] New in HTML5. Specifies the security algorithm of the key
            NAME - [name] New in HTML5. Defines a name for the <keygen> element

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "KEYGEN", *contents, emptyTag=False)
        self.attrset = frozenset(["AUTOFOCUS","CHALLENGE","DISABLED","FORM","KEYTYPE","NAME","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class LABEL(TagBase):
    '''
    [Definition and Usage]
        The <label> tag defines a label for an <input> element.
        The <label> element does not render as anything special for the user. However, it provides a usability improvement for mouse users, because if the user clicks on the text within the <label> element, it toggles the control.
        The for attribute of the <label> tag should be equal to the id attribute of the related element to bind them together.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The "form" attribute is new in HTML5.
    [Tips and Notes]
        Tip: A label can be bound to an element either by using the "for" attribute, or by placing the element inside the <label> element.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            FOR - [element_id] Specifies which form element a label is bound to
            FORM - [form_id] New in HTML5. Specifies one or more forms the label belongs to

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "LABEL", *contents, emptyTag=False)
        self.attrset = frozenset(["FOR","FORM","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class LEGEND(TagBase):
    '''
    [Definition and Usage]
        The <legend> tag defines a caption for the <fieldset> element.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        In HTML 4.01, the "align" attribute is deprecated , and it is not supported in HTML5. Use CSS to align <legend> elements.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            ALIGN - [top,bottom,left,right] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the alignment of the caption

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "LEGEND", *contents, emptyTag=False)
        self.attrset = frozenset(["ALIGN","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class LI(TagBase):
    '''
    [Definition and Usage]
        The <li> tag defines a list item.
        The <li> tag is used in ordered lists( <ol> ), unordered lists ( <ul> ), and in menu lists ( <menu> ).
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The "type" attribute was deprecated in HTML 4.01, and is NOT supported in HTML5. The "value" attribute was deprecated in HTML 4.01, but IS supported in HTML5.
    [Tips and Notes]
        Tip: Use CSS to define the type of list .
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            TYPE - [1,A,a,I,i,disc,square,circle] Not supported in HTML5. Deprecated in HTML 4.01. Specifies which kind of bullet point will be used
            VALUE - [number] Specifies the value of a list item. The following list items will increment from that number (only for <ol> lists)

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "LI", *contents, emptyTag=False)
        self.attrset = frozenset(["TYPE","VALUE","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class LINK(TagBase):
    '''
    [Definition and Usage]
        The <link> tag defines the relationship between a document and an external resource.
        The <link> tag is most used to link to style sheets.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        Some HTML 4.01 attributes are not supported in HTML5. The "sizes" attribute is new in HTML5.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            CHARSET - [char_encoding] Not supported in HTML5. Specifies the character encoding of the linked document
            HREF - [URL] Specifies the location of the linked document
            HREFLANG - [language_code] Specifies the language of the text in the linked document
            MEDIA - [media_query] Specifies on what device the linked document will be displayed
            REL - [alternate,archives,author,bookmark,external,first,help,icon,last,license,next,nofollow,noreferrer,pingback,prefetch,prev,search,sidebar,stylesheet,tag,up] Required. Specifies the relationship between the current document and the linked document
            REV - [reversed relationship] Not supported in HTML5. Specifies the relationship between the linked document and the current document
            SIZES - [Height,x,Width,any] New in HTML5. Specifies the size of the linked resource. Only for rel="icon"
            TARGET - [_blank,_self,_top,_parent,frame_name] Not supported in HTML5. Specifies where the linked document is to be loaded
            TYPE - [MIME_type] Specifies the MIME type of the linked document

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "LINK", *contents, emptyTag=False)
        self.attrset = frozenset(["CHARSET","HREF","HREFLANG","MEDIA","REL","REV","SIZES","TARGET","TYPE","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class MAP(TagBase):
    '''
    [Definition and Usage]
        The <map> tag is used to define a client-side image-map. An image-map is an image with clickable areas.
        The required name attribute of the <map> element is associated with the <img>'s usemap attribute and creates a relationship between the image and the map.
        The <map> element contains a number of <area> elements, that defines the clickable areas in the image map.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        Note: In HTML5, if the id attribute of the <map> tag is also specified, it must have the same value as the name attribute.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            NAME - [mapname] Required. Specifies the name of an image-map

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "MAP", *contents, emptyTag=False)
        self.attrset = frozenset(["NAME","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class MARK(TagBase):
    '''
    [Definition and Usage]
        The <mark> tag defines marked text.
        Use the <mark> tag if you want to highlight parts of your text.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <mark> tag is new in HTML5.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "MARK", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class MENU(TagBase):
    '''
    [Definition and Usage]
        The <menu> tag defines a list/menu of commands.
        The <menu> tag is used for context menus, toolbars and for listing form controls and commands.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <menu> element is deprecated in HTML 4.01. The <menu> element is redefined in HTML5.
    [Tips and Notes]
        Tip: Use CSS to style menu lists.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            LABEL - [text] New in HTML5. Specifies a visible label for the menu
            TYPE - [context,toolbar,list] New in HTML5. Specifies which type of menu to display. Default value is "list"

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "MENU", *contents, emptyTag=False)
        self.attrset = frozenset(["LABEL","TYPE","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class META(TagBase):
    '''
    [Definition and Usage]
        Metadata is data (information) about data.
        The <meta> tag provides metadata about the HTML document. Metadata will not be displayed on the page, but will be machine parsable.
        Meta elements are typically used to specify page description, keywords, author of the document, last modified, and other metadata.
        The metadata can be used by browsers (how to display content or reload page), search engines (keywords), or other web services.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The scheme attribute is not supported in HTML5. HTML5 has a new attribute, charset, which makes it easier to define charset: HTML 4.01: <meta http-equiv="content-type" content="text/html; charset=UTF-8"> HTML5: <meta charset="UTF-8">
    [Tips and Notes]
        Note: <meta> tags always goes inside the <head> element.
        Note: Metadata is always passed as name/value pairs.
        Note: The content attribute MUST be defined if the name or the http-equiv attribute is defined. if none of these are defined, the content attribute CANNOT be defined.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            CHARSET - [character_set] New in HTML5. Specifies the character encoding for the HTML document
            CONTENT - [text] Gives the value associated with the http-equiv or name attribute
            HTTP_EQUIV - [content-type,default-style,refresh] Provides an HTTP header for the information/value of the content attribute
            NAME - [application-name,author,description,generator,keywords] Specifies a name for the metadata
            SCHEME - [format/URI] Not supported in HTML5. Specifies a scheme to be used to interpret the value of the content attribute

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        """
        TagBase.__init__(self, "META", *contents, emptyTag=False)
        self.attrset = frozenset(["CHARSET","CONTENT","HTTP_EQUIV","NAME","SCHEME","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE"])
        self.setAttr(**attrs)


class METER(TagBase):
    '''
    [Definition and Usage]
        The <meter> tag defines a scalar measurement within a known range, or a fractional value. This is also known as a gauge.
        Examples: Disk usage, the relevance of a query result, etc.
        Note: The <meter> tag should not be used to indicate progress (as in a progress bar). For progress bars, use the <progress> tag.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <meter> tag is new in HTML5.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            FORM - [form_id] New in HTML5. Specifies one or more forms the <meter> element belongs to
            HIGH - [number] New in HTML5. Specifies the range that is considered to be a high value
            LOW - [number] New in HTML5. Specifies the range that is considered to be a low value
            MAX - [number] New in HTML5. Specifies the maximum value of the range
            MIN - [number] New in HTML5. Specifies the minimum value of the range
            OPTIMUM - [number] New in HTML5. Specifies what value is the optimal value for the gauge
            VALUE - [number] New in HTML5. Required. Specifies the current value of the gauge

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "METER", *contents, emptyTag=False)
        self.attrset = frozenset(["FORM","HIGH","LOW","MAX","MIN","OPTIMUM","VALUE","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class NAV(TagBase):
    '''
    [Definition and Usage]
        The <nav> tag defines a section of navigation links.
        Not all links of a document must be in a <nav> element. The <nav> element is intended only for major block of navigation links.
        Browsers, such as screen readers for disabled users, can use this element to determine whether to omit the initial rendering of this content.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <nav> tag is new in HTML5.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "NAV", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class NOFRAMES(TagBase):
    '''
    [Definition and Usage]
        The <noframes> tag is not supported in HTML5.
        The <noframes> tag is a fallback tag for browsers that do not support frames. It can contain all the HTML elements that you can find inside the <body> element of a normal HTML page.
        The <noframes> element can be used to link to a non-frameset version of the web site or to display a message to users that frames are required.
        The <noframes> element goes inside the <frameset> element.
        Note: If you want to validate a page containing frames, be sure the <!DOCTYPE> is set to either "HTML Frameset DTD" or "XHTML Frameset DTD".
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <noframes> tag is not supported in HTML5, but is supported in HTML 4.01.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Standard Attributes]:
            CLASS - [classname] Specifies a classname for an element
            DIR - [rtl,ltr] Specifies the text direction for the content in an element
            ID - [id] Specifies a unique id for an element
            LANG - [language_code] Specifies a language code for the content in an element
            STYLE - [style_definition] Specifies an inline style for an element
            TITLE - [text] Specifies extra information about an element
            XML__LANG - [language_code] Specifies a language code for the content in an element, in XHTML documents

        [Event Attributes]:
            ONCLICK - [script] Script to be run on a mouse click
            ONDBLCLICK - [script] Script to be run on a mouse double-click
            ONMOUSEDOWN - [script] Script to be run when mouse button is pressed
            ONMOUSEMOVE - [script] Script to be run when mouse pointer moves
            ONMOUSEOUT - [script] Script to be run when mouse pointer moves out of an element
            ONMOUSEOVER - [script] Script to be run when mouse pointer moves over an element
            ONMOUSEUP - [script] Script to be run when mouse button is released
            ONKEYDOWN - [script] Script to be run when a key is pressed
            ONKEYPRESS - [script] Script to be run when a key is pressed and released
            ONKEYUP - [script] Script to be run when a key is released

        """
        TagBase.__init__(self, "NOFRAMES", *contents, emptyTag=False)
        self.attrset = frozenset(["CLASS","DIR","ID","LANG","STYLE","TITLE","XML__LANG","ONCLICK","ONDBLCLICK","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class NOSCRIPT(TagBase):
    '''
    [Definition and Usage]
        The <noscript> tag is used to provide an alternate content for users that have disabled scripts in their browser or have a browser that doesn't support client-side scripting.
        The <noscript> element can contain all the elements that you can find inside the <body> element of a normal HTML page.
        The content inside the <noscript> element will only be displayed if scripts are not supported, or are disabled in the user's browser.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        NONE.
    [Tips and Notes]
        Tip: It is also a good practice to use the comment tag to "hide" scripts from browsers without support for client-side scripts (so they don't show them as plain text): <script> <!-- function displayMsg() { alert("Hello World!") } //--> </script>
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        """
        TagBase.__init__(self, "NOSCRIPT", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE"])
        self.setAttr(**attrs)


class OBJECT(TagBase):
    '''
    [Definition and Usage]
        The <object> tag defines an embedded object within an HTML document. Use this element to embed multimedia (like audio, video, Java applets, ActiveX, PDF, and Flash) in your web pages.
        You can also use the <object> tag to embed another webpage into your HTML document.
        You can use the <param> tag to pass parameters to plugins that have been embedded with the <object> tag.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        Some HTML 4.01 attributes are not supported in HTML5. The "form" attribute is new in HTML5. In HTML5, objects can be used and submitted in forms. In HTML5, objects can no longer appear inside the <head> element of a document.
    [Tips and Notes]
        Note: An <object> element must appear inside the <body> element. The text between the <object> and </object> is an alternate text, for browsers that do not support this tag.
        Tip: For images use the <img> tag instead of the <object> tag.
        Tip: At least one of the "data" or "type" attribute MUST be defined.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            ALIGN - [top,bottom,middle,left,right] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the alignment of the <object> element according to surrounding elements
            ARCHIVE - [URL] Not supported in HTML5. A space separated list of URL's to archives. The archives contains resources relevant to the object
            BORDER - [pixels] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the width of the border around an <object>
            CLASSID - [class_ID] Not supported in HTML5. Defines a class ID value as set in the Windows Registry or a URL
            CODEBASE - [URL] Not supported in HTML5. Defines where to find the code for the object
            CODETYPE - [MIME_type] Not supported in HTML5. The internet media type of the code referred to by the classid attribute
            DATA - [URL] Specifies the URL of the resource to be used by the object
            DECLARE - [declare] Not supported in HTML5. Defines that the object should only be declared, not created or instantiated until needed
            FORM - [form_id] New in HTML5. Specifies one or more forms the object belongs to
            HEIGHT - [pixels] Specifies the height of the object
            HSPACE - [pixels] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the whitespace on left and right side of an object
            NAME - [name] Specifies a name for the object
            STANDBY - [text] Not supported in HTML5. Defines a text to display while the object is loading
            TYPE - [MIME_type] Specifies the MIME type of data specified in the data attribute
            USEMAP - [#mapname] Specifies the name of a client-side image map to be used with the object
            VSPACE - [pixels] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the whitespace on top and bottom of an object
            WIDTH - [pixels] Specifies the width of the object

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "OBJECT", *contents, emptyTag=False)
        self.attrset = frozenset(["ALIGN","ARCHIVE","BORDER","CLASSID","CODEBASE","CODETYPE","DATA","DECLARE","FORM","HEIGHT","HSPACE","NAME","STANDBY","TYPE","USEMAP","VSPACE","WIDTH","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class OL(TagBase):
    '''
    [Definition and Usage]
        The <ol> tag defines an ordered list. An ordered list can be numerical or alphabetical.
        Use the <li> tag to define list items.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The "start" and "type" attributes were deprecated in HTML 4.01, but IS supported in HTML5. The "reversed" attribute is new in HTML5. The "compact" attribute was deprecated in HTML 4.01, and is not supported in HTML5.
    [Tips and Notes]
        Tip: For unordered list, use the <ul> tag.
        Tip: Use CSS to style lists.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            COMPACT - [compact] Not supported in HTML5. Deprecated in HTML 4.01. Specifies that the list should render smaller than normal
            REVERSED - [reversed] New in HTML5. Specifies that the list order should be descending (9,8,7...)
            START - [number] Specifies the start value of an ordered list
            TYPE - [1,A,a,I,i] Specifies the kind of marker to use in the list

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "OL", *contents, emptyTag=False)
        self.attrset = frozenset(["COMPACT","REVERSED","START","TYPE","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class OPTGROUP(TagBase):
    '''
    [Definition and Usage]
        The <optgroup> is used to group related options in a drop-down list.
        If you have a long list of options, groups of related options are easier to handle for a user.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        NONE.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            DISABLED - [disabled] Specifies that an option-group should be disabled
            LABEL - [text] Specifies a label for an option-group

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "OPTGROUP", *contents, emptyTag=False)
        self.attrset = frozenset(["DISABLED","LABEL","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class OPTION(TagBase):
    '''
    [Definition and Usage]
        The <option> tag defines an option in a select list.
        <option> elements go inside a <select> or <datalist> element.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Tips and Notes]
        Note: The <option> tag can be used without any attributes, but you usually need the value attribute, which indicates what is sent to the server.
        Tip: If you have a long list of options, you can group related options with the <optgroup> tag.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            DISABLED - [disabled] Specifies that an option should be disabled
            LABEL - [text] Specifies a shorter label for an option
            SELECTED - [selected] Specifies that an option should be pre-selected when the page loads
            VALUE - [text] Specifies the value to be sent to a server

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "OPTION", *contents, emptyTag=False)
        self.attrset = frozenset(["DISABLED","LABEL","SELECTED","VALUE","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class OUTPUT(TagBase):
    '''
    [Definition and Usage]
        The <output> tag represents the result of a calculation (like one performed by a script).
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <output> tag is new in HTML5.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            FOR - [element_id] New in HTML5. Specifies the relationship between the result of the calculation, and the elements used in the calculation
            FORM - [form_id] New in HTML5. Specifies one or more forms the output element belongs to
            NAME - [name] New in HTML5. Specifies a name for the output element

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "OUTPUT", *contents, emptyTag=False)
        self.attrset = frozenset(["FOR","FORM","NAME","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class P(TagBase):
    '''
    [Definition and Usage]
        The <p> tag defines a paragraph.
        Browsers automatically add some space (margin) before and after each <p> element. The margins can be modified with CSS (with the margin properties).
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The align attribute is deprecated in HTML 4.01, and is no longer supported in HTML5.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            ALIGN - [left,right,center,justify] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the alignment of the text within a paragraph

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "P", *contents, emptyTag=False)
        self.attrset = frozenset(["ALIGN","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class PARAM(TagBase):
    '''
    [Definition and Usage]
        The <param> tag is used to define parameters for plugins embedded with an <object> element.
        Tip: HTML 5 also includes two new elements for playing audio or video: The <audio> and <video> tags.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The HTML 4.01 attributes: "type" and "valuetype", are not supported in HTML5.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            NAME - [name] Specifies the name of a parameter
            TYPE - [MIME_type] Not supported in HTML5. Specifies the MIME type of the parameter
            VALUE - [value] Specifies the value of the parameter
            VALUETYPE - [data,ref,object] Not supported in HTML5. Specifies the type of the value

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "PARAM", *contents, emptyTag=False)
        self.attrset = frozenset(["NAME","TYPE","VALUE","VALUETYPE","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class PRE(TagBase):
    '''
    [Definition and Usage]
        The <pre> tag defines preformatted text.
        Text in a <pre> element is displayed in a fixed-width font (usually Courier), and it preserves both spaces and line breaks.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The "width" attribute is deprecated in HTML 4.01, and is not supported in HTML5.
    [Tips and Notes]
        Tip: Use the <pre> element when displaying text with unusual formatting, or some sort of computer code.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            WIDTH - [number] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the maximum number of characters per line

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "PRE", *contents, emptyTag=False)
        self.attrset = frozenset(["WIDTH","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class PROGRESS(TagBase):
    '''
    [Definition and Usage]
        The <progress> tag represents the progress of a task.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <progress> tag is new in HTML5.
    [Tips and Notes]
        Tip: Use the <progress> tag in conjunction with JavaScript to display the progress of a task. Note : The <progress> tag is not suitable for representing a gauge (e.g. disk space usage or relevance of a query result). To represent a gauge, use the <meter> tag instead.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            MAX - [number] New in HTML5. Specifies how much work the task requires in total
            VALUE - [number] New in HTML5. Specifies how much of the task has been completed

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "PROGRESS", *contents, emptyTag=False)
        self.attrset = frozenset(["MAX","VALUE","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class Q(TagBase):
    '''
    [Definition and Usage]
        The <q> tag defines a short quotation.
        Browsers normally insert quotation marks around the quotation.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        NONE.
    [Tips and Notes]
        Tip: Use <blockquote> to mark up a section that is quoted from another source.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            CITE - [URL] Specifies the source URL of the quote

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "Q", *contents, emptyTag=False)
        self.attrset = frozenset(["CITE","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class RP(TagBase):
    '''
    [Definition and Usage]
        The <rp> tag defines what to show if a browser does NOT support ruby annotations.
        Ruby annotations are used for East Asian typography, to show the pronunciation of East Asian characters.
        Use the <rp> tag together with the <ruby> and the <rt> tags: The <ruby> element consists of one or more characters that needs an explanation/pronunciation, and an <rt> element that gives that information, and an optional <rp> element that defines what to show for browsers that not support ruby annotations.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <rp> tag is new in HTML5.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "RP", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class RT(TagBase):
    '''
    [Definition and Usage]
        The <rt> tag defines an explanation or pronunciation of characters (for East Asian typography) in a ruby annotation.
        Use the <rt> tag together with the <ruby> and the <rp> tags: The <ruby> element consists of one or more characters that needs an explanation/pronunciation, and an <rt> element that gives that information, and an optional <rp> element that defines what to show for browsers that not support ruby annotations.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <rt> tag is new in HTML5.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "RT", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class RUBY(TagBase):
    '''
    [Definition and Usage]
        The <ruby> tag specifies a ruby annotation.
        Ruby annotations are used for East Asian typography, to show the pronunciation of East Asian characters.
        Use the <ruby> tag together with the <rt> and/or the <rp> tags: The <ruby> element consists of one or more characters that needs an explanation/pronunciation, and an <rt> element that gives that information, and an optional <rp> element that defines what to show for browsers that not support ruby annotations.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <ruby> tag is new in HTML5.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "RUBY", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class S(TagBase):
    '''
    [Definition and Usage]
        The <s> tag specifies text that is no longer correct, accurate or relevant.
        The <s> tag should not be used to define replaced or deleted text, use the <del> tag to define replaced or deleted text.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <s> element is deprecated in HTML 4.01, and used to define strikethrough text. The <s> element is redefined in HTML5, and is now used to define text that is no longer correct.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "S", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class SAMP(TagBase):
    '''
    [Definition and Usage]
        The <em>, <strong>, <dfn>, <code>, <samp>, <kbd>, and <var> tags are all phrase tags. They are not deprecated, but it is possible to achieve richer effect with CSS.
        Tag
        Description
        <em>
        Renders as emphasized text
        <strong>
        Defines important text
        <dfn>
        Defines a definition term
        <code>
        Defines a piece of computer code
        <samp>
        Defines sample output from a computer program
        <kbd>
        Defines keyboard input
        <var>
        Defines a variable
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        In HTML 4.01, the <strong> tag defines strong emphasized text, but in HTML5 it defines important text.
    '''
    def __init__(self, *contents):
        """
        *contents - [tuple] tag contents.

        """
        TagBase.__init__(self, "SAMP", *contents, emptyTag=False)


class SCRIPT(TagBase):
    '''
    [Definition and Usage]
        The <script> tag is used to define a client-side script, such as a JavaScript.
        The <script> element either contains scripting statements, or it points to an external script file through the src attribute.
        Common uses for JavaScript are image manipulation, form validation, and dynamic changes of content.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The "type" attribute is required in HTML 4, but optional in HTML5. The "async" attribute is new in HTML5. The HTML 4.01 attribute: "xml:space", is not supported in HTML5.
    [Tips and Notes]
        Note: If the "src" attribute is present, the <script> element must be empty.
        Tip: Also look at the <noscript> element for users that have disabled scripts in their browser, or have a browser that doesn't support client-side scripting.
        Note: There are several ways an external script can be executed: If async="async": The script is executed asynchronously with the rest of the page (the script will be executed while the page continues the parsing) If async is not present and defer="defer": The script is executed when the page has finished parsing If neither async or defer is present: The script is fetched and executed immediately, before the browser continues parsing the page
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            ASYNC - [async] New in HTML5. Specifies that the script is executed asynchronously (only for external scripts)
            CHARSET - [charset] Specifies the character encoding used in an external script file
            DEFER - [defer] Specifies that the script is executed when the page has finished parsing (only for external scripts)
            SRC - [URL] Specifies the URL of an external script file
            TYPE - [MIME-type] Specifies the MIME type of the script
            XML__SPACE - [preserve] Not supported in HTML5. Specifies whether whitespace in code should be preserved

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        """
        TagBase.__init__(self, "SCRIPT", *contents, emptyTag=False)
        self.attrset = frozenset(["ASYNC","CHARSET","DEFER","SRC","TYPE","XML__SPACE","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE"])
        self.setAttr(**attrs)


class SECTION(TagBase):
    '''
    [Definition and Usage]
        The <section> tag defines sections in a document. Such as chapters, headers, footers, or any other sections of the document.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <section> tag is new in HTML5.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "SECTION", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class SELECT(TagBase):
    '''
    [Definition and Usage]
        The <select> element is used to create a drop-down list.
        The <option> tags inside the <select> element define the available options in the list.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        HTML5 has added some new attributes.
    [Tips and Notes]
        Tip: The <select> element is a form control and can be used in a form to collect user input.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            AUTOFOCUS - [autofocus] New in HTML5. Specifies that the drop-down list should automatically get focus when the page loads
            DISABLED - [disabled] Specifies that a drop-down list should be disabled
            FORM - [form_id] New in HTML5. Defines one or more forms the select field belongs to
            MULTIPLE - [multiple] Specifies that multiple options can be selected at once
            NAME - [name] Defines a name for the drop-down list
            SIZE - [number] Defines the number of visible options in a drop-down list

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "SELECT", *contents, emptyTag=False)
        self.attrset = frozenset(["AUTOFOCUS","DISABLED","FORM","MULTIPLE","NAME","SIZE","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class SMALL(TagBase):
    '''
    [Definition and Usage]
        The <small> tag defines smaller text (and other side comments).
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        NONE.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "SMALL", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class SOURCE(TagBase):
    '''
    [Definition and Usage]
        The <source> tag is used to specify multiple media resources for media elements, such as <video> and <audio>.
        The <source> tag allows you to specify alternative video/audio files which the browser may choose from, based on its media type or codec support.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <source> tag is new in HTML5.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            MEDIA - [media_query] New in HTML5. Specifies the type of media resource
            SRC - [URL] New in HTML5. Specifies the URL of the media file
            TYPE - [MIME_type] New in HTML5. Specifies the MIME type of the media resource

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "SOURCE", *contents, emptyTag=False)
        self.attrset = frozenset(["MEDIA","SRC","TYPE","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class SPAN(TagBase):
    '''
    [Definition and Usage]
        The <span> tag is used to group inline-elements in a document.
        The <span> tag provides no visual change by itself.
        The <span> tag provides a way to add a hook to a part of a text or a part of a document.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        NONE.
    [Tips and Notes]
        Tip: When a text is hooked in a <span> element, you can style it with CSS, or manipulate it with JavaScript.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "SPAN", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class STRIKE(TagBase):
    '''
    [Definition and Usage]
        The <strike> tag is not supported in HTML5. Use the <del> tag instead.
        The <strike> element is deprecated in HTML 4.01.
        The <strike> tag define strikethrough text.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Standard Attributes]:
            CLASS - [classname] Specifies a classname for an element
            DIR - [rtl,ltr] Specifies the text direction for the content in an element
            ID - [id] Specifies a unique id for an element
            LANG - [language_code] Specifies a language code for the content in an element
            STYLE - [style_definition] Specifies an inline style for an element
            TITLE - [text] Specifies extra information about an element

        """
        TagBase.__init__(self, "STRIKE", *contents, emptyTag=False)
        self.attrset = frozenset(["CLASS","DIR","ID","LANG","STYLE","TITLE"])
        self.setAttr(**attrs)


class STRONG(TagBase):
    '''
    [Definition and Usage]
        The <em>, <strong>, <dfn>, <code>, <samp>, <kbd>, and <var> tags are all phrase tags. They are not deprecated, but it is possible to achieve richer effect with CSS.
        Tag
        Description
        <em>
        Renders as emphasized text
        <strong>
        Defines important text
        <dfn>
        Defines a definition term
        <code>
        Defines a piece of computer code
        <samp>
        Defines sample output from a computer program
        <kbd>
        Defines keyboard input
        <var>
        Defines a variable
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        In HTML 4.01, the <strong> tag defines strong emphasized text, but in HTML5 it defines important text.
    '''
    def __init__(self, *contents):
        """
        *contents - [tuple] tag contents.

        """
        TagBase.__init__(self, "STRONG", *contents, emptyTag=False)


class STYLE(TagBase):
    '''
    [Definition and Usage]
        The <style> tag is used to define style information for an HTML document.
        Inside the <style> element you specify how HTML elements should render in a browser.
        Each HTML document can contain multiple <style> tags.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The "scoped" attribute is new in HTML5, which allows to define styles for a specified section of the document. If the "scoped" attribute is present, the styles only apply to the style element's parent element and that element's child elements.
    [Tips and Notes]
        Tip: To link to an external style sheet, use the <link> tag.
        Tip: To learn more about style sheets, please read our CSS Tutorial .
        Note: If the "scoped" attribute is not used, each <style> tag must be located in the head section.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            MEDIA - [media_query] Specifies what media/device the media resource is optimized for
            SCOPED - [scoped] New in HTML5. Specifies that the styles only apply to this element's parent element and that element's child elements
            TYPE - [text/css] Specifies the MIME type of the style sheet

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "STYLE", *contents, emptyTag=False)
        self.attrset = frozenset(["MEDIA","SCOPED","TYPE","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class SUB(TagBase):
    '''
    [Definition and Usage]
        The <sub> tag defines subscript text. Subscript text appears half a character below the baseline. Subscript text can be used for chemical formulas, like H 2 O.
        The <sup> tag defines superscript text. Superscript text appears half a character above the baseline. Superscript text can be used for footnotes, like WWW [1] .
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        NONE.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "SUB", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class SUMMARY(TagBase):
    '''
    [Definition and Usage]
        The <summary> tag defines a visible heading for the <details> element. The heading can be clicked to view/hide the details.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <summary> tag is new in HTML5.
    [Tips and Notes]
        Note: The <summary> element should be the first child element of the <details> element.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "SUMMARY", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class SUP(TagBase):
    '''
    [Definition and Usage]
        The <sub> tag defines subscript text. Subscript text appears half a character below the baseline. Subscript text can be used for chemical formulas, like H 2 O.
        The <sup> tag defines superscript text. Superscript text appears half a character above the baseline. Superscript text can be used for footnotes, like WWW [1] .
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        NONE.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "SUP", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class TABLE(TagBase):
    '''
    [Definition and Usage]
        The <table> tag defines an HTML table.
        An HTML table consists of the <table> element and one or more <tr> , <th> , and <td> elements.
        The <tr> element defines a table row, the <th> element defines a table header, and the <td> element defines a table cell.
        A more complex HTML table may also include <caption>, <col>, <colgroup>, <thead>, <tfoot>, and <tbody> elements.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        HTML5 only supports the "border" attribute, and its value can be "1" or "".
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            ALIGN - [left,center,right] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the alignment of a table according to surrounding text
            BGCOLOR - [rgb(x,x,x),#xxxxxx,colorname] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the background color for a table
            BORDER - [1,""] Specifies whether the table cells should have borders or not
            CELLPADDING - [pixels] Not supported in HTML5. Specifies the space between the cell wall and the cell content
            CELLSPACING - [pixels] Not supported in HTML5. Specifies the space between cells
            FRAME - [void,above,below,hsides,lhs,rhs,vsides,box,border] Not supported in HTML5. Specifies which parts of the outside borders that should be visible
            RULES - [none,groups,rows,cols,all] Not supported in HTML5. Specifies which parts of the inside borders that should be visible
            SUMMARY - [text] Not supported in HTML5. Specifies a summary of the content of a table
            WIDTH - [pixels,%] Not supported in HTML5. Specifies the width of a table

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "TABLE", *contents, emptyTag=False)
        self.attrset = frozenset(["ALIGN","BGCOLOR","BORDER","CELLPADDING","CELLSPACING","FRAME","RULES","SUMMARY","WIDTH","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class TBODY(TagBase):
    '''
    [Definition and Usage]
        The <tbody> tag is used to group the body content in an HTML table.
        The <tbody> element is used in conjunction with the <thead> and <tfoot> elements to specify each part of a table (body, header, footer).
        Browsers can use these elements to enable scrolling of the table body independently of the header and footer. Also, when printing a large table that spans multiple pages, these elements can enable the table header and footer to be printed at the top and bottom of each page.
        The <tbody> tag must be used in the following context: As a child of a <table> element, after any <caption>, <colgroup>, and <thead> elements.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        None of the HTML 4.01 attributes are supported in HTML5.
    [Tips and Notes]
        Note: The <tbody> element must have one or more <tr> tags inside.
        Tip: The <thead>, <tbody>, and <tfoot> elements will not affect the layout of the table by default. However, you can use CSS to style these elements.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            ALIGN - [right,left,center,justify,char] Not supported in HTML5. Aligns the content inside the <tbody> element
            CHAR - [character] Not supported in HTML5. Aligns the content inside the <tbody> element to a character
            CHAROFF - [number] Not supported in HTML5. Sets the number of characters the content inside the <tbody> element will be aligned from the character specified by the char attribute
            VALIGN - [top,middle,bottom,baseline] Not supported in HTML5. Vertical aligns the content inside the <tbody> element

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "TBODY", *contents, emptyTag=False)
        self.attrset = frozenset(["ALIGN","CHAR","CHAROFF","VALIGN","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class TD(TagBase):
    '''
    [Definition and Usage]
        The <td> tag defines a standard cell in an HTML table.
        An HTML table has two kinds of cells:
        Header cells - contains header information (created with the <th> element)
        Standard cells - contains data (created with the <td> element)
        The text in <th> elements are bold and centered by default.
        The text in <td> elements are regular and left-aligned by default.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        Some HTML 4.01 attributes are not supported in HTML5.
    [Tips and Notes]
        Tip: Use the colspan and rowspan attribute to let the content span over multiple columns or rows!
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            ABBR - [text] Not supported in HTML5. Specifies an abbreviated version of the content in a cell
            ALIGN - [left,right,center,justify,char] Not supported in HTML5. Aligns the content in a cell
            AXIS - [category_name] Not supported in HTML5. Categorizes cells
            BGCOLOR - [rgb(x,x,x),#xxxxxx,colorname] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the background color of a cell
            CHAR - [character] Not supported in HTML5. Aligns the content in a cell to a character
            CHAROFF - [number] Not supported in HTML5. Sets the number of characters the content will be aligned from the character specified by the char attribute
            COLSPAN - [number] Specifies the number of columns a cell should span
            HEADERS - [header_id] Specifies one or more header cells a cell is related to
            HEIGHT - [pixels,%] Not supported in HTML5. Deprecated in HTML 4.01. Sets the height of a cell
            NOWRAP - [nowrap] Not supported in HTML5. Deprecated in HTML 4.01. Specifies that the content inside a cell should not wrap
            ROWSPAN - [number] Sets the number of rows a cell should span
            SCOPE - [col,colgroup,row,rowgroup] Not supported in HTML5. Defines a way to associate header cells and data cells in a table
            VALIGN - [top,middle,bottom,baseline] Not supported in HTML5. Vertical aligns the content in a cell
            WIDTH - [pixels,%] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the width of a cell

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "TD", *contents, emptyTag=False)
        self.attrset = frozenset(["ABBR","ALIGN","AXIS","BGCOLOR","CHAR","CHAROFF","COLSPAN","HEADERS","HEIGHT","NOWRAP","ROWSPAN","SCOPE","VALIGN","WIDTH","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class TEXTAREA(TagBase):
    '''
    [Definition and Usage]
        The <textarea> tag defines a multi-line text input control.
        A text area can hold an unlimited number of characters, and the text renders in a fixed-width font (usually Courier).
        The size of a text area can be specified by the cols and rows attributes, or even better; through CSS' height and width properties.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        HTML5 has added several new attributes.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            AUTOFOCUS - [autofocus] New in HTML5. Specifies that a text area should automatically get focus when the page loads
            COLS - [number] Specifies the visible width of a text area
            DISABLED - [disabled] Specifies that a text area should be disabled
            FORM - [form_id] New in HTML5. Specifies one or more forms the text area belongs to
            MAXLENGTH - [number] New in HTML5. Specifies the maximum number of characters allowed in the text area
            NAME - [text] Specifies a name for a text area
            PLACEHOLDER - [text] New in HTML5. Specifies a short hint that describes the expected value of a text area
            READONLY - [readonly] Specifies that a text area should be read-only
            REQUIRED - [required] New in HTML5. Specifies that a text area is required/must be filled out
            ROWS - [number] Specifies the visible number of lines in a text area
            WRAP - [hard,soft] New in HTML5. Specifies how the text in a text area is to be wrapped when submitted in a form

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "TEXTAREA", *contents, emptyTag=False)
        self.attrset = frozenset(["AUTOFOCUS","COLS","DISABLED","FORM","MAXLENGTH","NAME","PLACEHOLDER","READONLY","REQUIRED","ROWS","WRAP","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class TFOOT(TagBase):
    '''
    [Definition and Usage]
        The <tfoot> tag is used to group footer content in an HTML table.
        The <tfoot> element is used in conjunction with the <thead> and <tbody> elements to specify each part of a table (footer, header, body).
        Browsers can use these elements to enable scrolling of the table body independently of the header and footer. Also, when printing a large table that spans multiple pages, these elements can enable the table header and footer to be printed at the top and bottom of each page.
        The <tfoot> tag must be used in the following context: As a child of a <table> element, after any <caption>, <colgroup>, and <thead> elements and before any <tbody> and <tr> elements.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        None of the HTML 4.01 attributes are supported in HTML5.
    [Tips and Notes]
        Note: The <tfoot> element must have one or more <tr> tags inside.
        Tip: The <thead>, <tbody>, and <tfoot> elements will not affect the layout of the table by default. However, you can use CSS to style these elements.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            ALIGN - [right,left,center,justify,char] Not supported in HTML5. Aligns the content inside the <tfoot> element
            CHAR - [character] Not supported in HTML5. Aligns the content inside the <tfoot> element to a character
            CHAROFF - [number] Not supported in HTML5. Sets the number of characters the content inside the <tfoot> element will be aligned from the character specified by the char attribute
            VALIGN - [top,middle,bottom,baseline] Not supported in HTML5. Vertical aligns the content inside the <tfoot> element

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "TFOOT", *contents, emptyTag=False)
        self.attrset = frozenset(["ALIGN","CHAR","CHAROFF","VALIGN","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class TH(TagBase):
    '''
    [Definition and Usage]
        The <th> tag defines a header cell in an HTML table.
        An HTML table has two kinds of cells:
        Header cells - contains header information (created with the <th> element)
        Standard cells - contains data (created with the <td> element)
        The text in <th> elements are bold and centered by default.
        The text in <td> elements are regular and left-aligned by default.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        Some HTML 4.01 attributes are not supported in HTML5.
    [Tips and Notes]
        Tip: Use the colspan and rowspan attribute to let the content span over multiple columns or rows!
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            ABBR - [text] Not supported in HTML5. Specifies an abbreviated version of the content in a header cell
            ALIGN - [left,right,center,justify,char] Not supported in HTML5. Aligns the content in a header cell
            AXIS - [category_name] Not supported in HTML5. Categorizes header cells
            BGCOLOR - [rgb(x,x,x),#xxxxxx,colorname] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the background color of a header cell
            CHAR - [character] Not supported in HTML5. Aligns the content in a header cell to a character
            CHAROFF - [number] Not supported in HTML5. Sets the number of characters the content will be aligned from the character specified by the char attribute
            COLSPAN - [number] Specifies the number of columns a header cell should span
            HEADERS - [header_id] Specifies one or more header cells a cell is related to
            HEIGHT - [pixels,%] Not supported in HTML5. Deprecated in HTML 4.01. Sets the height of a header cell
            NOWRAP - [nowrap] Not supported in HTML5. Deprecated in HTML 4.01. Specifies that the content inside a header cell should not wrap
            ROWSPAN - [number] Specifies the number of rows a header cell should span
            SCOPE - [col,colgroup,row,rowgroup] Specifies whether a header cell is a header for a column, row, or group of columns or rows
            VALIGN - [top,middle,bottom,baseline] Not supported in HTML5. Vertical aligns the content in a header cell
            WIDTH - [pixels,%] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the width of a header cell

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "TH", *contents, emptyTag=False)
        self.attrset = frozenset(["ABBR","ALIGN","AXIS","BGCOLOR","CHAR","CHAROFF","COLSPAN","HEADERS","HEIGHT","NOWRAP","ROWSPAN","SCOPE","VALIGN","WIDTH","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class THEAD(TagBase):
    '''
    [Definition and Usage]
        The <thead> tag is used to group header content in an HTML table.
        The <thead> element is used in conjunction with the <tbody> and <tfoot> elements to specify each part of a table (header, body, footer).
        Browsers can use these elements to enable scrolling of the table body independently of the header and footer. Also, when printing a large table that spans multiple pages, these elements can enable the table header and footer to be printed at the top and bottom of each page.
        The <thead> tag must be used in the following context: As a child of a <table> element, after any <caption>, and <colgroup> elements, and before any <tbody>, <tfoot>, and <tr> elements.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        None of the HTML 4.01 attributes are supported in HTML5.
    [Tips and Notes]
        Note: The <thead> element must have one or more <tr> tags inside.
        Tip: The <thead>, <tbody>, and <tfoot> elements will not affect the layout of the table by default. However, you can use CSS to style these elements.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            ALIGN - [right,left,center,justify,char] Not supported in HTML5. Aligns the content inside the <thead> element
            CHAR - [character] Not supported in HTML5. Aligns the content inside the <thead> element to a character
            CHAROFF - [number] Not supported in HTML5. Sets the number of characters the content inside the <thead> element will be aligned from the character specified by the char attribute
            VALIGN - [top,middle,bottom,baseline] Not supported in HTML5. Vertical aligns the content inside the <thead> element

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "THEAD", *contents, emptyTag=False)
        self.attrset = frozenset(["ALIGN","CHAR","CHAROFF","VALIGN","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class TIME(TagBase):
    '''
    [Definition and Usage]
        The <time> tag defines either a time (24 hour clock), or a date in the Gregorian calendar, optionally with a time and a time-zone offset.
        This element can be used as a way to encode dates and times in a machine-readable way so that, for example, user agents can offer to add birthday reminders or scheduled events to the user's calendar, and search engines can produce smarter search results.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <time> tag is new in HTML5.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            DATETIME - [datetime] New in HTML5. Gives the date/time being specified. Otherwise, the date/time is given by the element's contents
            PUBDATE - [pubdate] New in HTML5. Indicates that the date/time in the <time> element is the publication date of the document (or the nearest ancestor <article> element)

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "TIME", *contents, emptyTag=False)
        self.attrset = frozenset(["DATETIME","PUBDATE","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class TITLE(TagBase):
    '''
    [Definition and Usage]
        The <title> tag is required in all HTML documents and it defines the title of the document.
        The <title> element:
        defines a title in the browser toolbar
        provides a title for the page when it is added to favorites
        displays a title for the page in search-engine results
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        NONE.
    [Tips and Notes]
        Note: You can NOT have more than one <title> element in an HTML document.
        Tip: If you omit the <title> tag, the document will not validate as HTML.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        """
        TagBase.__init__(self, "TITLE", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE"])
        self.setAttr(**attrs)


class TR(TagBase):
    '''
    [Definition and Usage]
        The <tr> tag defines a row in an HTML table.
        A <tr> element contains one or more <th> or <td> elements.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        None of the HTML 4.01 attributes are supported in HTML5.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            ALIGN - [right,left,center,justify,char] Not supported in HTML5. Aligns the content in a table row
            BGCOLOR - [rgb(x,x,x),#xxxxxx,colorname] Not supported in HTML5. Deprecated in HTML 4.01. Specifies a background color for a table row
            CHAR - [character] Not supported in HTML5. Aligns the content in a table row to a character
            CHAROFF - [number] Not supported in HTML5. Sets the number of characters the content will be aligned from the character specified by the char attribute
            VALIGN - [top,middle,bottom,baseline] Not supported in HTML5. Vertical aligns the content in a table row

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "TR", *contents, emptyTag=False)
        self.attrset = frozenset(["ALIGN","BGCOLOR","CHAR","CHAROFF","VALIGN","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class TRACK(TagBase):
    '''
    [Definition and Usage]
        The <track> tag specifies text tracks for media elements ( <audio> and <video>).
        This element is used to specify subtitles, caption files or other files containing text, that should be visible when the media is playing.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <track> tag is new in HTML5.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Optional Attributes]:
            DEFAULT - [default] New in HTML5. Specifies that the track is to be enabled if the user's preferences do not indicate that another track would be more appropriate
            KIND - [captions,chapters,descriptions,metadata,subtitles] New in HTML5. Specifies the kind of text track
            LABEL - [text] New in HTML5. Specifies the title of the text track
            SRC - [URL] New in HTML5. Required. Specifies the URL of the track file
            SRCLANG - [language_code] New in HTML5. Specifies the language of the track text data (required if kind="subtitles")

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "TRACK", *contents, emptyTag=False)
        self.attrset = frozenset(["DEFAULT","KIND","LABEL","SRC","SRCLANG","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class TT(TagBase):
    '''
    [Definition and Usage]
        The <tt> tag is not supported in HTML5. Use CSS instead.
        The <tt> tag defines teletype text.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <tt> tag is not supported in HTML5, but is supported in HTML 4.01.
    [Tips and Notes]
        Tip: Use CSS to specify the type of font in a document.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Standard Attributes]:
            CLASS - [classname] Specifies a classname for an element
            DIR - [rtl,ltr] Specifies the text direction for the content in an element
            ID - [id] Specifies a unique id for an element
            LANG - [language_code] Specifies a language code for the content in an element
            STYLE - [style_definition] Specifies an inline style for an element
            TITLE - [text] Specifies extra information about an element
            XML__LANG - [language_code] Specifies a language code for the content in an element, in XHTML documents

        """
        TagBase.__init__(self, "TT", *contents, emptyTag=False)
        self.attrset = frozenset(["CLASS","DIR","ID","LANG","STYLE","TITLE","XML__LANG"])
        self.setAttr(**attrs)


class U(TagBase):
    '''
    [Definition and Usage]
        The <u> tag represents some text that should be stylistically different from normal text, such as misspelled words or proper nouns in Chinese.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        In HTML 4.01, the <u> element is deprecated (the <u> element was used to define underlined text). The <u> element is redefined in HTML5, and it represents some text that should be stylistically different from normal text, such as misspelled words or proper nouns in Chinese.
    [Tips and Notes]
        Tip: Avoid using the <u> element where it could be confused for a hyperlink.
        Note: The HTML 5 specification reminds developers that other elements are almost always more appropriate than <u>.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "U", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class UL(TagBase):
    '''
    [Definition and Usage]
        The <ul> tag defines an unordered (bulleted) list.
        Use the <ul> tag together with the <li> tag to create unordered lists.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The "compact" and "type" attributes are deprecated in HTML 4.01, and are not supported in HTML5.
    [Tips and Notes]
        Tip: Use CSS to style lists.
        Tip: To create ordered lists, use the <ol> tag.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Attributes]
            COMPACT - [compact] Not supported in HTML5. Deprecated in HTML 4.01. Specifies that the list should render smaller than normal
            TYPE - [disc,square,circle] Not supported in HTML5. Deprecated in HTML 4.01. Specifies the kind of marker to use in the list

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "UL", *contents, emptyTag=False)
        self.attrset = frozenset(["COMPACT","TYPE","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class VAR(TagBase):
    '''
    [Definition and Usage]
        The <em>, <strong>, <dfn>, <code>, <samp>, <kbd>, and <var> tags are all phrase tags. They are not deprecated, but it is possible to achieve richer effect with CSS.
        Tag
        Description
        <em>
        Renders as emphasized text
        <strong>
        Defines important text
        <dfn>
        Defines a definition term
        <code>
        Defines a piece of computer code
        <samp>
        Defines sample output from a computer program
        <kbd>
        Defines keyboard input
        <var>
        Defines a variable
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        In HTML 4.01, the <strong> tag defines strong emphasized text, but in HTML5 it defines important text.
    '''
    def __init__(self, *contents):
        """
        *contents - [tuple] tag contents.

        """
        TagBase.__init__(self, "VAR", *contents, emptyTag=False)


class VIDEO(TagBase):
    '''
    [Definition and Usage]
        The <video> tag specifies video, such as a movie clip or other video streams.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <video> tag is new in HTML5.
    [Tips and Notes]
        Tip: Any text between the <video> and </video> tags will be displayed in browsers that do not support the <video> element.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Optional Attributes]:
            AUTOPLAY - [autoplay] New in HTML5. Specifies that the video will start playing as soon as it is ready
            CONTROLS - [controls] New in HTML5. Specifies that video controls should be displayed (such as a play/pause button etc).
            HEIGHT - [pixels] New in HTML5. Sets the height of the video player
            LOOP - [loop] New in HTML5. Specifies that the video will start over again, every time it is finished
            MUTED - [muted] New in HTML5. Specifies that the audio output of the video should be muted
            POSTER - [URL] New in HTML5. Specifies an image to be shown while the video is downloading, or until the user hits the play button
            PRELOAD - [auto,metadata,none] New in HTML5. Specifies if and how the author thinks the video should be loaded when the page loads
            SRC - [URL] New in HTML5. Specifies the URL of the video file
            WIDTH - [pixels] New in HTML5. Sets the width of the video player

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "VIDEO", *contents, emptyTag=False)
        self.attrset = frozenset(["AUTOPLAY","CONTROLS","HEIGHT","LOOP","MUTED","POSTER","PRELOAD","SRC","WIDTH","ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


class WBR(TagBase):
    '''
    [Definition and Usage]
        The Word Break Opportunity (<wbr>) specifies where in a text it would be ok to add a line-break.
        Tip: When a word is too long, or you are afraid that the browser will break your lines at the wrong place, you can use the <wbr> element to add word break opportunities.
    [Browser Support]
        IE, Firefox, Opera, Chrome, Safari
    [Differences Between HTML 4.01 and HTML5]
        The <wbr> tag is new in HTML5.
    '''
    def __init__(self, *contents, **attrs):
        """
        *contents - [tuple] tag contents.
        **attrs - [dict] tag attributes.

        [Global Attributes]:
            ACCESSKEY - Specifies a shortcut key to activate/focus an element
            CLASS - Specifies one or more classnames for an element (refers to a class in a style sheet)
            CONTENTEDITABLE - New in HTML5. Specifies whether the content of an element is editable or not
            CONTEXTMENU - New in HTML5. Specifies a context menu for an element. The context menu appears when a user right-clicks on the element
            DIR - Specifies the text direction for the content in an element
            DRAGGABLE - New in HTML5. Specifies whether an element is draggable or not
            DROPZONE - New in HTML5. Specifies whether the dragged data is copied, moved, or linked, when dropped
            HIDDEN - New in HTML5. Specifies that an element is not yet, or is no longer, relevant
            ID - Specifies a unique id for an element
            LANG - Specifies the language of the element's content
            SPELLCHECK - New in HTML5. Specifies whether the element is to have its spelling and grammar checked or not
            STYLE - Specifies an inline CSS style for an element
            TABINDEX - Specifies the tabbing order of an element
            TITLE - Specifies extra information about an element

        [Event Attributes]:
        media Events:
            ONABORT - [script] Script to be run on abort
            ONCANPLAY - [script] New in HTML5. Script to be run when a file is ready to start playing (when it has buffered enough to begin)
            ONCANPLAYTHROUGH - [script] New in HTML5. Script to be run when a file can be played all the way to the end without pausing for buffering
            ONDURATIONCHANGE - [script] New in HTML5. Script to be run when the length of the media changes
            ONEMPTIED - [script] New in HTML5. Script to be run when something bad happens and the file is suddenly unavailable (like unexpectedly disconnects)
            ONENDED - [script] New in HTML5. Script to be run when the media has reach the end (a useful event for messages like "thanks for listening")
            ONERROR - [script] New in HTML5. Script to be run when an error occurs when the file is being loaded
            ONLOADEDDATA - [script] New in HTML5. Script to be run when media data is loaded
            ONLOADEDMETADATA - [script] New in HTML5. Script to be run when meta data (like dimensions and duration) are loaded
            ONLOADSTART - [script] New in HTML5. Script to be run just as the file begins to load before anything is actually loaded
            ONPAUSE - [script] New in HTML5. Script to be run when the media is paused either by the user or programmatically
            ONPLAY - [script] New in HTML5. Script to be run when the media is ready to start playing
            ONPLAYING - [script] New in HTML5. Script to be run when the media actually has started playing
            ONPROGRESS - [script] New in HTML5. Script to be run when the browser is in the process of getting the media data
            ONRATECHANGE - [script] New in HTML5. Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)
            ONREADYSTATECHANGE - [script] New in HTML5. Script to be run each time the ready state changes (the ready state tracks the state of the media data)
            ONSEEKED - [script] New in HTML5. Script to be run when the seeking attribute is set to false indicating that seeking has ended
            ONSEEKING - [script] New in HTML5. Script to be run when the seeking attribute is set to true indicating that seeking is active
            ONSTALLED - [script] New in HTML5. Script to be run when the browser is unable to fetch the media data for whatever reason
            ONSUSPEND - [script] New in HTML5. Script to be run when fetching the media data is stopped before it is completely loaded for whatever reason
            ONTIMEUPDATE - [script] New in HTML5. Script to be run when the playing position has changed (like when the user fast forwards to a different point in the media)
            ONVOLUMECHANGE - [script] New in HTML5. Script to be run each time the volume is changed which (includes setting the volume to "mute")
            ONWAITING - [script] New in HTML5. Script to be run when the media has paused but is expected to resume (like when the media pauses to buffer more data)
        window Events:
            ONAFTERPRINT - [script] New in HTML5. Script to be run after the document is printed
            ONBEFOREPRINT - [script] New in HTML5. Script to be run before the document is printed
            ONBEFOREUNLOAD - [script] New in HTML5. Script to be run before the document is unloaded
            ONERROR - [script] New in HTML5. Script to be run when an error occur
            ONHASCHANGE - [script] New in HTML5. Script to be run when the document has changed
            ONLOAD - [script] Fires after the page is finished loading
            ONMESSAGE - [script] New in HTML5. Script to be run when the message is triggered
            ONOFFLINE - [script] New in HTML5. Script to be run when the document goes offline
            ONONLINE - [script] New in HTML5. Script to be run when the document comes online
            ONPAGEHIDE - [script] New in HTML5. Script to be run when the window is hidden
            ONPAGESHOW - [script] New in HTML5. Script to be run when the window becomes visible
            ONPOPSTATE - [script] New in HTML5. Script to be run when the window's history changes
            ONREDO - [script] New in HTML5. Script to be run when the document performs a redo
            ONRESIZE - [script] New in HTML5. Fires when the browser window is resized
            ONSTORAGE - [script] New in HTML5. Script to be run when a Web Storage area is updated
            ONUNDO - [script] New in HTML5. Script to be run when the document performs an undo
            ONUNLOAD - [script] Fires once a page has unloaded (or the browser window has been closed)
        mouse Events:
            ONCLICK - [script] Fires on a mouse click on the element
            ONDBLCLICK - [script] Fires on a mouse double-click on the element
            ONDRAG - [script] New in HTML5. Script to be run when an element is dragged
            ONDRAGEND - [script] New in HTML5. Script to be run at the end of a drag operation
            ONDRAGENTER - [script] New in HTML5. Script to be run when an element has been dragged to a valid drop target
            ONDRAGLEAVE - [script] New in HTML5. Script to be run when an element leaves a valid drop target
            ONDRAGOVER - [script] New in HTML5. Script to be run when an element is being dragged over a valid drop target
            ONDRAGSTART - [script] New in HTML5. Script to be run at the start of a drag operation
            ONDROP - [script] New in HTML5. Script to be run when dragged element is being dropped
            ONMOUSEDOWN - [script] Fires when a mouse button is pressed down on an element
            ONMOUSEMOVE - [script] Fires when the mouse pointer moves over an element
            ONMOUSEOUT - [script] Fires when the mouse pointer moves out of an element
            ONMOUSEOVER - [script] Fires when the mouse pointer moves over an element
            ONMOUSEUP - [script] Fires when a mouse button is released over an element
            ONMOUSEWHEEL - [script] New in HTML5. Script to be run when the mouse wheel is being rotated
            ONSCROLL - [script] New in HTML5. Script to be run when an element's scrollbar is being scrolled
        form Events:
            ONBLUR - [script] Fires the moment that the element loses focus
            ONCHANGE - [script] Fires the moment when the value of the element is changed
            ONCONTEXTMENU - [script] New in HTML5. Script to be run when a context menu is triggered
            ONFOCUS - [script] Fires the moment when the element gets focus
            ONFORMCHANGE - [script] New in HTML5. Script to be run when a form changes
            ONFORMINPUT - [script] New in HTML5. Script to be run when a form gets user input
            ONINPUT - [script] New in HTML5. Script to be run when an element gets user input
            ONINVALID - [script] New in HTML5. Script to be run when an element is invalid
            ONRESET - [script] Fires when the Reset button in a form is clicked Not supported in HTML5
            ONSELECT - [script] Fires after some text has been selected in an element
            ONSUBMIT - [script] Fires when a form is submitted
        keyboard Events:
            ONKEYDOWN - [script] Fires when a user is pressing a key
            ONKEYPRESS - [script] Fires when a user presses a key
            ONKEYUP - [script] Fires when a user releases a key

        """
        TagBase.__init__(self, "WBR", *contents, emptyTag=False)
        self.attrset = frozenset(["ACCESSKEY","CLASS","CONTENTEDITABLE","CONTEXTMENU","DIR","DRAGGABLE","DROPZONE","HIDDEN","ID","LANG","SPELLCHECK","STYLE","TABINDEX","TITLE","ONABORT","ONCANPLAY","ONCANPLAYTHROUGH","ONDURATIONCHANGE","ONEMPTIED","ONENDED","ONERROR","ONLOADEDDATA","ONLOADEDMETADATA","ONLOADSTART","ONPAUSE","ONPLAY","ONPLAYING","ONPROGRESS","ONRATECHANGE","ONREADYSTATECHANGE","ONSEEKED","ONSEEKING","ONSTALLED","ONSUSPEND","ONTIMEUPDATE","ONVOLUMECHANGE","ONWAITING","ONAFTERPRINT","ONBEFOREPRINT","ONBEFOREUNLOAD","ONERROR","ONHASCHANGE","ONLOAD","ONMESSAGE","ONOFFLINE","ONONLINE","ONPAGEHIDE","ONPAGESHOW","ONPOPSTATE","ONREDO","ONRESIZE","ONSTORAGE","ONUNDO","ONUNLOAD","ONCLICK","ONDBLCLICK","ONDRAG","ONDRAGEND","ONDRAGENTER","ONDRAGLEAVE","ONDRAGOVER","ONDRAGSTART","ONDROP","ONMOUSEDOWN","ONMOUSEMOVE","ONMOUSEOUT","ONMOUSEOVER","ONMOUSEUP","ONMOUSEWHEEL","ONSCROLL","ONBLUR","ONCHANGE","ONCONTEXTMENU","ONFOCUS","ONFORMCHANGE","ONFORMINPUT","ONINPUT","ONINVALID","ONRESET","ONSELECT","ONSUBMIT","ONKEYDOWN","ONKEYPRESS","ONKEYUP"])
        self.setAttr(**attrs)


